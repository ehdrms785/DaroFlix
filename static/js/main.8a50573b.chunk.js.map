{"version":3,"sources":["assets/happyPig.jpg","assets/NoImage.png","assets/imdb.PNG","Components/Section.js","Components/Loading.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Components/DetailTab/DetailTabHeader.js","Components/DetailTab/TabYoutube.js","Components/DetailTab/TabCompany.js","Components/DetailTab/TabCountry.js","Components/DetailTab/TabSeason.js","Components/DetailTab/DetailTabContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","Loading","nowPage","role","aria-label","Text","props","color","Message","text","proTypes","PropTypes","string","isRequired","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","pathname","state","require","length","substring","HomePresenter","nowPlaying","upComing","popular","error","loading","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","movieApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","a","TVPresenter","topRated","airingToday","TVContainer","Header","header","List","ul","Item","li","SLink","Link","Boolean","current","withRouter","location","ButtonContainer","Button","button","selected","DetailTabHeader","isVideos","isCompanies","isCountries","isSeasons","handleClick","selectedButton","onClick","e","VideoContainer","iframe","TabYoutube","youtubeKey","src","allow","BoxContainer","LogoContainer","Logo","img","ContextContainer","Country","TabCompany","companies","console","log","company","count","logo_path","name","origin_country","FlagContainer","Flag","CountryContainer","TabCountry","countries","country","iso_3166_1","ItemContainer","SeasonName","OverviewContainer","isOverView","OverView","p","TabSeason","seasons","season","overview","slice","DetailTabContainer","production_companies","production_countries","result","videos","Backdrop","bgImage","Content","Cover","Data","h3","IMDB","Img","Divider","Overview","DetailPresenter","backdrop_path","imdb_id","href","runtime","episode_run_time","genres","genre","index","DetailContainer","includes","match","push","history","parsedIntId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a50573b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/happyPig.d8b979ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/NoImage.43419804.png\";","module.exports = __webpack_public_path__ + \"static/media/imdb.ce572da3.PNG\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child) {\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\nconst Title = styled.span`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n\r\n`;\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    grid-gap: 25px;\r\n\r\n\r\n`;\r\n\r\nconst Section = ({ title, children}) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n\r\n);\r\n\r\nSection.propTypes = {\r\n    title:PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n}\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled  from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\n\r\n\r\nconst Container = styled.div`\r\n\r\n    height:100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 80px;\r\n    margin-top: 80px;\r\n`;\r\n\r\nconst Loading = ( { nowPage } ) => (\r\n    <Container>\r\n        <Helmet>\r\n            <title>\r\n                Loading | {nowPage}  \r\n            </title>\r\n        </Helmet>\r\n        <span role=\"img\" aria-label=\"Loading\" >\r\n        🕐\r\n        </span>\r\n    </Container>\r\n\r\n)\r\n\r\nexport default Loading;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${props => props.color};\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    margin-top: 100px;\r\n\r\n`;\r\n\r\nconst Message = ( { text , color }) => (\r\n    <Container>\r\n        <Text color={color}>\r\n            {text}\r\n        </Text>\r\n    </Container>\r\n)\r\n\r\nMessage.proTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired\r\n}\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.15s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n  transition: opacity 0.15s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 2.5px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link\r\n    to={{\r\n      pathname: isMovie ? `/movie/${id}` : `/show/${id}`,\r\n      state: { isMovie: isMovie },\r\n    }}\r\n  >\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w500${imageUrl}`\r\n              : require(\"../assets/happyPig.jpg\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 15 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageurl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loading from \"Components/Loading\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upComing, popular, error, loading }) =>\r\n  loading ? (\r\n    <Loading nowPage=\"Movies\" />\r\n  ) : error ? (\r\n    <Message text={error} color=\"red\" />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Movies | Nomfilx</title>\r\n      </Helmet>\r\n      {upComing && upComing.length > 0 && (\r\n        <Section title=\"UpComing\">\r\n          {upComing.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.original_title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {nowPlaying && nowPlaying.length > 0 && (\r\n        <Section title=\"Now Playing\">\r\n          {nowPlaying.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.original_title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular\">\r\n          {popular.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.original_title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>\r\n  );\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upComing: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n    params: {\r\n      api_key: \"10923b261ba94d897ac6b81148314a3f\",\r\n      language: \"en-US\"\r\n    }\r\n  });\r\n  \r\n\r\nexport const movieApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upComing: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: (id) => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/movie\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n}\r\n\r\nexport const tvApi = {\r\n    popular: () => api.get(\"tv/popular\"),\r\n    topRated: () =>api.get(\"tv/top_rated\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: (id) => api.get(`tv/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(`search/tv`, {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }   \r\n\r\n    })\r\n};","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { movieApi } from \"api\"; \r\n\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upComing: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {\r\n                data: {results: nowPlaying} \r\n            } = await movieApi.nowPlaying();\r\n            const {\r\n                data: { results: upComing}\r\n            } = await movieApi.upComing();\r\n            const {\r\n                data: {results: popular}\r\n            } = await movieApi.popular();\r\n            \r\n            this.setState( {\r\n                nowPlaying,\r\n                upComing,\r\n                popular\r\n            });\r\n        } catch {\r\n            this.setState( {\r\n                error: \"Can't find movies information\"\r\n            });\r\n        } finally {\r\n            this.setState( {\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { nowPlaying, upComing, popular, error, loading } = this.state;\r\n        return <HomePresenter \r\n                    nowPlaying={nowPlaying} \r\n                    upComing={upComing}\r\n                    popular={popular}\r\n                    error={error}\r\n                    loading={loading}\r\n                />\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"Components/Loading\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  /* margin-bottom: 50px; */\r\n  width: 100%;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  error,\r\n  loading,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) =>\r\n  error ? (\r\n    <Message text={error} color=\"red\" />\r\n  ) : (\r\n    <Container>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"Search Movies or TV Shows\"\r\n          value={searchTerm}\r\n          onChange={updateTerm}\r\n        />\r\n      </Form>\r\n      {loading ? (\r\n        <Loading nowPage=\"Search\" />\r\n      ) : (\r\n        <>\r\n          <Helmet>\r\n            <title>Search Page | Nomfilx</title>\r\n          </Helmet>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"Movie Results\">\r\n              {movieResults.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={\r\n                    movie.release_date\r\n                      ? movie.release_date.substring(0, 4)\r\n                      : null\r\n                  }\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n\r\n          {tvResults && tvResults.length > 0 && (\r\n            <Section title=\"TV Show Results\">\r\n              {tvResults.map((show) => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.original_name}\r\n                  rating={show.vote_average}\r\n                  year={\r\n                    show.first_air_date\r\n                      ? show.first_air_date.substring(0, 4)\r\n                      : null\r\n                  }\r\n                  isMovie={false}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n\r\n          {error && <Message color=\"#e74c3c\" text={error} />}\r\n\r\n          {movieResults &&\r\n            tvResults &&\r\n            movieResults.length === 0 &&\r\n            tvResults.length === 0 && (\r\n              <Message color=\"grey\" text=\"Nothing Found Anything\" />\r\n            )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\n\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        error: null,\r\n        loading: false\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if(searchTerm !== \"\") {\r\n            this.searchByTerm();            \r\n        }\r\n\r\n    }\r\n    updateTerm = (event) => {\r\n        const { \r\n            target: { value }\r\n        } = event;\r\n        this.setState( {\r\n            searchTerm: value\r\n        })\r\n    }\r\n\r\n\r\n     searchByTerm = async() => {\r\n        const { searchTerm } = this.state;\r\n        try {\r\n            this.setState( { loading: true });\r\n\r\n            const {\r\n                data: { results: movieResults }\r\n            }  = await movieApi.search(searchTerm);\r\n            const {\r\n                data: { results: tvResults }\r\n            }  = await tvApi.search(searchTerm);\r\n            this.setState( {\r\n                movieResults,\r\n                tvResults,\r\n            })\r\n        } catch {\r\n            this.setState( {\r\n                error: \"Can't find results\"\r\n            })\r\n        } finally {\r\n            this.setState( {\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const {movieResults, tvResults, searchTerm, error, loading} = this.state;\r\n        return <SearchPresenter \r\n                    movieResults = {movieResults}\r\n                    tvResults = {tvResults}\r\n                    searchTerm = {searchTerm}\r\n                    error = {error}\r\n                    loading = {loading}\r\n                    handleSubmit = {this.handleSubmit}\r\n                    updateTerm = {this.updateTerm}\r\n                />;\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loading from \"Components/Loading\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ( {popular, topRated, airingToday, error, loading }) => \r\nloading ? <Loading nowPage=\"TV Show\"/> :\r\n(\r\n    error \r\n    ? <Message \r\n        text={error}\r\n        color=\"red\"\r\n        />\r\n    :<Container>\r\n\t    <Helmet>\r\n            <title>\r\n                TV Show | Nomfilx\r\n            </title>\r\n        </Helmet>\r\n        {popular && popular.length > 0 && (\r\n            <Section title=\"Popular\">\r\n                {popular.map(show => (\r\n                    <Poster \r\n                        key ={show.id} \r\n                        id={show.id} \r\n                        imageUrl={show.poster_path} \r\n                        title={show.original_name}\r\n                        rating={show.vote_average}\r\n                        year={show.first_air_date.substring(0, 4)}\r\n                        isMovie = {false}\r\n                    />\r\n                ))}\r\n            </Section> \r\n                \r\n        )}\r\n        {topRated && topRated.length > 0 && (\r\n            <Section title=\"TopRated\">\r\n                {topRated.map(show => (\r\n                    <Poster \r\n                    key ={show.id} \r\n                    id={show.id} \r\n                    imageUrl={show.poster_path} \r\n                    title={show.original_name}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date.substring(0, 4)}\r\n                    isMovie = {false}\r\n                />\r\n                ))}\r\n            </Section>\r\n        )}\r\n        \r\n        {airingToday && airingToday.length > 0 && (\r\n            <Section title=\"Airing Today\">\r\n                {airingToday.map(show => (\r\n                    <Poster \r\n                    key ={show.id} \r\n                    id={show.id} \r\n                    imageUrl={show.poster_path} \r\n                    title={show.original_name}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date.substring(0, 4)}\r\n                    isMovie = {false}\r\n                />\r\n                ))}\r\n            </Section>\r\n        )}\r\n\r\n        {error && <Message color = \"#e74c3c\" text = {error} /> }\r\n    </Container>\r\n)\r\n\r\n\r\nTVPresenter.propTypes = {\r\n    popular: PropTypes.array,\r\n    topRated: PropTypes.array,\r\n    airingToday: PropTypes.array,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    popular: null,\r\n    topRated: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        popular,\r\n        topRated,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV Information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { popular, topRated, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        popular={popular}\r\n        topRated={topRated}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 0.9);\r\n  box-shadow: 0px 1px 2px 1px rgba(222, 37, 16, 0.6);\r\n\r\n  z-index: 10;\r\n`;\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  text-align: center;\r\n  height: 50px;\r\n`;\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-bottom: 3px solid\r\n    ${(props) =>\r\n      Boolean(props.current) ? \"rgba(255, 255, 255, 0.9)\" : \"transparent\"};\r\n  transition: border-bottom 0.2s ease-in-out;\r\n`;\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item>\r\n        <SLink to=\"/\" current={pathname === \"/\" ? 1 : 0}>\r\n          Movies\r\n        </SLink>\r\n      </Item>\r\n      <Item>\r\n        <SLink to=\"/tv\" current={pathname === \"/tv\" ? 1 : 0}>\r\n          TV\r\n        </SLink>\r\n      </Item>\r\n      <Item>\r\n        <SLink to=\"/search\" current={pathname === \"/search\" ? 1 : 0}>\r\n          Search\r\n        </SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: rgba(10, 10, 10, 0.8);\r\n  display: flex;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  width: 100%;\r\n\r\n  background-color: ${(props) =>\r\n    props.selected ? \"#c8224f\" : \"rgba(20, 20, 20, 0.8)\"};\r\n`;\r\n\r\nexport default function DetailTabHeader({\r\n  isVideos,\r\n  isCompanies,\r\n  isCountries,\r\n  isSeasons,\r\n  handleClick,\r\n  selectedButton,\r\n}) {\r\n  //   console.log(isVideos);\r\n  //   console.log(isCompanies);\r\n  //   console.log(isCountries);\r\n  //   console.log(isSeasons);\r\n  //   console.log(selectedButton);\r\n\r\n  return (\r\n    <Container>\r\n      <ButtonContainer>\r\n        {isVideos && (\r\n          <Button\r\n            selected={selectedButton === \"Youtube\"}\r\n            onClick={(e) => handleClick(\"Youtube\")}\r\n          >\r\n            Youtube\r\n          </Button>\r\n        )}\r\n        {isCompanies && (\r\n          <Button\r\n            selected={selectedButton === \"Company\"}\r\n            onClick={(e) => handleClick(\"Company\")}\r\n          >\r\n            Company\r\n          </Button>\r\n        )}\r\n        {isCountries && (\r\n          <Button\r\n            selected={selectedButton === \"Country\"}\r\n            onClick={(e) => handleClick(\"Country\")}\r\n          >\r\n            Country\r\n          </Button>\r\n        )}\r\n        {isSeasons && (\r\n          <Button\r\n            selected={selectedButton === \"Seasons\"}\r\n            onClick={(e) => handleClick(\"Seasons\")}\r\n          >\r\n            Seasons\r\n          </Button>\r\n        )}\r\n      </ButtonContainer>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst VideoContainer = styled.iframe`\r\n  width: 100%;\r\n  height: calc(100% - 40px);\r\n`;\r\n\r\nexport default function TabYoutube({ youtubeKey }) {\r\n  return (\r\n    <VideoContainer\r\n      src={`https://www.youtube.com/embed/${youtubeKey}`}\r\n      allow=\"fullscreen ; encrypted-media; gyroscope; picture-in-picture\"\r\n    ></VideoContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 0;\r\n  overflow: scroll; /*new*/\r\n  /* width */\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n    height: 5px;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: #f1f1f1;\r\n  }\r\n\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n  }\r\n\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  }\r\n`;\r\n\r\nconst BoxContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 20px; /*new*/\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  width: 300px;\r\n  display: flex;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 100%;\r\n  height: 150px;\r\n  margin: auto;\r\n  background-color: rgba(255, 255, 255, 0.95);\r\n  padding: 30px; /*new*/\r\n  max-width: 250px; /*new*/\r\n`;\r\n\r\nconst ContextContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 300px;\r\n  height: 150px;\r\n  font-weight: 550;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  margin: auto;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 18px;\r\n  margin: auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst Country = styled.div`\r\n  font-size: 25px;\r\n  margin: auto;\r\n  text-align: center;\r\n`;\r\n\r\nexport default function TabCompany({ companies }) {\r\n  console.log(companies);\r\n  return (\r\n    <Container>\r\n      {companies &&\r\n        companies.map((company) => (\r\n          <BoxContainer count={companies.length}>\r\n            <LogoContainer>\r\n              <Logo\r\n                count={companies.length}\r\n                src={\r\n                  company.logo_path\r\n                    ? `https://image.tmdb.org/t/p/w200${company.logo_path}`\r\n                    : `${require(\"assets/NoImage.png\")}`\r\n                }\r\n              />\r\n            </LogoContainer>\r\n            <ContextContainer count={companies.length}>\r\n              <Title>{company.name}</Title>\r\n              <Country>\r\n                {company.origin_country ? company.origin_country : \"Unknown\"}\r\n              </Country>\r\n            </ContextContainer>\r\n          </BoxContainer>\r\n        ))}\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 0;\r\n  overflow: scroll; /*new*/\r\n  /* width */\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n    height: 5px;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: #f1f1f1;\r\n  }\r\n\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n  }\r\n\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  }\r\n`;\r\n\r\nconst BoxContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 20px; /*new*/\r\n`;\r\n\r\nconst FlagContainer = styled.div`\r\n  width: 300px;\r\n  display: flex;\r\n`;\r\n\r\nconst Flag = styled.img`\r\n  /* width: 30%;\r\n  margin: auto; */\r\n  width: 100%;\r\n  height: 150px;\r\n  margin: auto;\r\n  padding: 30px; /*new*/\r\n  max-width: 250px; /*new*/\r\n`;\r\nconst CountryContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: auto;\r\n`;\r\n\r\nconst Country = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  width: 300px;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: 550;\r\n  font-size: 25px;\r\n`;\r\n\r\nexport default function TabCountry({ countries }) {\r\n  return (\r\n    <Container>\r\n      {countries &&\r\n        countries.map((country) => (\r\n          <BoxContainer count={countries.length}>\r\n            <FlagContainer>\r\n              <Flag\r\n                count={countries.length}\r\n                src={\r\n                  country.iso_3166_1\r\n                    ? `https://www.countryflags.io/${country.iso_3166_1}/shiny/64.png`\r\n                    : `${require(\"assets/NoImage.png\")}`\r\n                }\r\n              />\r\n            </FlagContainer>\r\n            <CountryContainer>\r\n              <Country count={countries.length}>{country.name}</Country>\r\n            </CountryContainer>\r\n          </BoxContainer>\r\n        ))}\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 0 10px 10px;\r\n  overflow: scroll; /*new*/\r\n  /* width */\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n    height: 5px;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: #f1f1f1;\r\n  }\r\n\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n  }\r\n\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  }\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst SeasonName = styled.span`\r\n  width: 100%;\r\n  padding: 20px;\r\n  margin-top: 15px;\r\n  background-color: #640;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst OverviewContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  line-height: 1.5;\r\n  font-size: ${(props) => (props.isOverView ? \"30px\" : \"12px\")};\r\n`;\r\n\r\nconst OverView = styled.p``;\r\n\r\nexport default function TabSeason({ seasons }) {\r\n  return (\r\n    <Container>\r\n      {seasons &&\r\n        seasons.map((season) => (\r\n          <>\r\n            {/* Sometimes season has null value ! It needs to check it  */}\r\n            {season.overview === null ? (season.overview = \"\") : null}\r\n            <SeasonName>{season.name}</SeasonName>\r\n            <ItemContainer>\r\n              <LogoContainer>\r\n                <Logo\r\n                  src={`https://image.tmdb.org/t/p/w200${season.poster_path}`}\r\n                />\r\n              </LogoContainer>\r\n              <OverviewContainer isOverView={season.overview.length < 1}>\r\n                <OverView>\r\n                  {season.overview.length < 1\r\n                    ? \"( No OverView )\"\r\n                    : season.overview.length > 730\r\n                    ? `${season.overview.slice(0, 730)}...`\r\n                    : season.overview}\r\n                </OverView>\r\n              </OverviewContainer>\r\n            </ItemContainer>\r\n          </>\r\n        ))}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport DetailTabHeader from \"./DetailTabHeader\";\r\nimport TabYoutube from \"./TabYoutube\";\r\nimport TabCompany from \"./TabCompany\";\r\nimport TabCountry from \"./TabCountry\";\r\nimport TabSeason from \"./TabSeason\";\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 80%;\r\n  background-color: rgba(30, 30, 30, 0.8);\r\n  height: 100%;\r\n  max-height: 375px;\r\n`;\r\n\r\nexport default class DetailTabContainer extends Component {\r\n  state = {\r\n    selectedButton: null,\r\n    seasons: null,\r\n    results: null,\r\n    production_companies: null,\r\n    production_countries: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    let selectedButton = null;\r\n    const {\r\n      result: {\r\n        videos: { results },\r\n        production_companies,\r\n        production_countries,\r\n      },\r\n      isMovie,\r\n    } = this.props;\r\n    let seasons = null;\r\n    if (!isMovie) {\r\n      ({\r\n        result: { seasons: seasons },\r\n      } = this.props);\r\n    }\r\n\r\n    if (results && results.length > 0) {\r\n      selectedButton = \"Youtube\";\r\n    } else if (production_companies && production_companies.length > 0) {\r\n      selectedButton = \"Company\";\r\n    } else if (production_countries && production_countries.length > 0) {\r\n      selectedButton = \"Country\";\r\n    } else if (seasons && seasons.length > 0) {\r\n      selectedButton = \"Seasons\";\r\n    }\r\n    this.setState({\r\n      selectedButton,\r\n      seasons,\r\n      results,\r\n      production_companies,\r\n      production_countries,\r\n    });\r\n  }\r\n\r\n  handleClick = (selectedButton) => {\r\n    this.setState({\r\n      selectedButton,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedButton,\r\n      seasons,\r\n      results,\r\n      production_companies,\r\n      production_countries,\r\n    } = this.state;\r\n    const isVideos = results && results.length > 0;\r\n    const isCompanies = production_companies && production_companies.length > 0;\r\n    const isCountries = production_countries && production_countries.length > 0;\r\n    const isSeasons = seasons && seasons.length > 0;\r\n\r\n    /* If selectedButton is null, wait til next rendering  */\r\n    return selectedButton ? (\r\n      <Container>\r\n        <DetailTabHeader\r\n          isVideos={isVideos}\r\n          isCompanies={isCompanies}\r\n          isCountries={isCountries}\r\n          isSeasons={isSeasons}\r\n          handleClick={this.handleClick}\r\n          selectedButton={selectedButton}\r\n        />\r\n        {console.log(selectedButton)}\r\n        {selectedButton === \"Youtube\" && isVideos && results.length > 0 && (\r\n          <TabYoutube youtubeKey={results[0].key} />\r\n        )}\r\n        {selectedButton === \"Company\" && production_companies.length > 0 && (\r\n          <TabCompany companies={production_companies} />\r\n        )}\r\n        {selectedButton === \"Country\" && production_countries.length > 0 && (\r\n          <TabCountry countries={production_countries} />\r\n        )}\r\n        {selectedButton === \"Seasons\" && seasons.length > 0 && (\r\n          <TabSeason seasons={seasons} />\r\n        )}\r\n      </Container>\r\n    ) : null;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"Components/Loading\";\r\nimport Helmet from \"react-helmet\";\r\nimport DetailTabContainer from \"Components/DetailTab/DetailTabContainer\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  height: calc(105vh - 50px);\r\n  width: 100%;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center, center;\r\n  background-size: cover;\r\n  filter: blur(2px);\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: calc(120vh - 100px);\r\n  position: relative;\r\n`;\r\n\r\nconst Cover = styled.img`\r\n  top: 80px;\r\n  width: 30%;\r\n  height: calc(100vh - 150px);\r\n  background-size: cover;\r\n  background-position: center, center;\r\n  border-radius: 5px;\r\n  position: sticky;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n  display: block;\r\n`;\r\nconst Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 35px;\r\n`;\r\n\r\nconst IMDB = styled.a``;\r\n\r\nconst Img = styled.img`\r\n  margin-top: 6px;\r\n  margin-left: 10px;\r\n  background-image: url(${(props) => props.bgImage});\r\n  width: 52px;\r\n  height: 30px;\r\n  background-position: center, center;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  line-height: 1.5;\r\n  opacity: 0.7;\r\n  width: 60%;\r\n  height: 100px;\r\n  margin-bottom: 30px;\r\n  display: block;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading, isMovie }) => {\r\n  return loading ? (\r\n    <Loading nowPage=\"Detail\" />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={\r\n          result.backdrop_path\r\n            ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\r\n            : result.poster_path\r\n            ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n            : require(\"assets/happyPig.jpg\")\r\n        }\r\n      />\r\n\r\n      <Content>\r\n        <Cover\r\n          src={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"assets/happyPig.jpg\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Header>\r\n            <Title>\r\n              {result.original_title\r\n                ? result.original_title\r\n                : result.original_name}\r\n            </Title>\r\n            {result.imdb_id ? (\r\n              <IMDB\r\n                href={`https://www.imdb.com/title/${result.imdb_id}`}\r\n                target=\"_blank\"\r\n              >\r\n                <Img bgImage={require(\"../../assets/imdb.PNG\")} />\r\n              </IMDB>\r\n            ) : null}\r\n          </Header>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date\r\n                ? result.first_air_date.substring(0, 4)\r\n                : \"❌\"}\r\n            </Item>\r\n            <Divider>▪</Divider>\r\n            <Item>\r\n              {result.runtime\r\n                ? `${result.runtime} min`\r\n                : result.episode_run_time\r\n                ? `${result.episode_run_time[0]} min`\r\n                : \"❤\"}\r\n            </Item>\r\n            <Divider>▪</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n\r\n          <Overview>\r\n            {result.overview.length > 500\r\n              ? `${result.overview.slice(0, 500)}...`\r\n              : result.overview}\r\n          </Overview>\r\n\r\n          <DetailTabContainer result={result} isMovie={isMovie} />\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\n  DetailPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n    isMovie: PropTypes.bool.isRequired,\r\n  };\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedIntId = parseInt(id);\r\n    if (isNaN(parsedIntId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await movieApi.movieDetail(parsedIntId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedIntId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can not find anything\" });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n        result,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading, isMovie } = this.state;\r\n    return (\r\n      <DetailPresenter\r\n        result={result}\r\n        error={error}\r\n        loading={loading}\r\n        isMovie={isMovie}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n     HashRouter as Router,\r\n     Route,\r\n     Redirect,\r\n     Switch\r\n    } from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport Search from \"Routes/Search\";\r\nimport TV from \"Routes/TV\";\r\nimport Header from \"Components/Header\"\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default() => (\r\n    <Router>\r\n        <Header />\r\n        <Switch>\r\n            <Route path=\"/\" exact component = {Home} />\r\n            <Route path=\"/tv\"  component = {TV} />\r\n            <Route path=\"/search\"  component = {Search} />\r\n            <Route path=\"/movie/:id\" component = {Detail} />\r\n            <Route path=\"/show/:id\" component = {Detail} />\r\n\r\n            <Redirect from=\"*\"to =\"/\" />\r\n\r\n        </Switch>\r\n    </Router>\r\n)","import { createGlobalStyle } from \"styled-components\";\r\nimport { reset } from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration: none;\r\n        color:inherit;\r\n    }\r\n    * {\r\n        box-sizing:border-box;\r\n    }\r\n    body {\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\r\n         Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n         font-size: 12px;\r\n         background-color: rgba(20, 20, 20 , 1);\r\n         color:white;\r\n         padding-top: 50px;\r\n    }\r\n    button {\r\n        border: none;\r\n        outline: none;\r\n        font: inherit;\r\n        color: inherit;\r\n        background: none\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n      <Router /> \n      <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from \"Components/App\";\nimport \"./api\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}