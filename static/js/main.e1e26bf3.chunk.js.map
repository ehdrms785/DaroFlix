{"version":3,"sources":["assets/happyPig.jpg","assets/NoImage.png","assets/imdb.PNG","Components/CategorySection.js","Components/Loading.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Components/DetailTab/DetailTabHeader.js","Components/DetailTab/TabYoutube.js","Components/DetailTab/TabCompany.js","Components/DetailTab/TabCountry.js","Components/DetailTab/TabSeason.js","Components/DetailTab/DetailTabContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/ViewMorePoster.js","Components/ViewMoreSection.js","Routes/ViewMore/ViewMorePresenter.js","Routes/ViewMore/index.js","Routes/ViewMore/ViewMoreContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","ViewMore","Link","CategorySection","title","children","link","toUpperCase","to","Loading","role","aria-label","Text","props","color","Message","text","proTypes","PropTypes","string","isRequired","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","pathname","state","require","length","substring","HomePresenter","nowPlaying","upComing","popular","error","loading","nowPage","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","movieApi","page","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","history","push","target","a","search","location","URLSearchParams","console","log","queryCheck","prevProps","TVPresenter","topRated","airingToday","TVContainer","Header","header","List","ul","Item","li","SLink","Boolean","current","withRouter","ButtonContainer","Button","button","selected","DetailTabHeader","isVideos","isCompanies","isCountries","isSeasons","handleClick","selectedButton","onClick","e","VideoContainer","iframe","TabYoutube","youtubeKey","src","allow","BoxContainer","LogoContainer","Logo","img","ContextContainer","Country","TabCompany","companies","company","count","logo_path","name","origin_country","FlagContainer","Flag","CountryContainer","TabCountry","countries","country","iso_3166_1","ItemContainer","SeasonName","OverviewContainer","isOverView","OverView","p","TabSeason","seasons","season","overview","slice","DetailTabContainer","production_companies","production_countries","result","videos","Backdrop","bgImage","Content","Cover","Data","h3","IMDB","Img","Divider","Overview","DetailPresenter","changeParam","backdrop_path","min","max","Math","floor","random","imdb_id","href","runtime","episode_run_time","genres","genre","index","DetailContainer","getData","match","parsedIntId","parseInt","isNaN","includes","prevId","nowId","ViewMorePoster","ViewMoreSection","ViewMorePresenter","subject","ViewMoreContainer","scroll","type","movies1","movies2","movies","shows1","shows2","shows","document","documentElement","clientHeight","scrollTop","scrollHeight","window","scrollY","getDataMore","addEventListener","infiniteScroll","bind","path","exact","component","Home","TV","Search","Detail","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e1e26bf3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/happyPig.d8b979ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/NoImage.43419804.png\";","module.exports = __webpack_public_path__ + \"static/media/imdb.ce572da3.PNG\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\nconst Title = styled.span`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst ViewMore = styled(Link)`\r\n  padding: 3px 10px;\r\n  border: 2.5px dashed darkred;\r\n  margin-left: 15px;\r\n  color: deepskyblue;\r\n  font-size: 14px;\r\n  &:hover {\r\n    color: skyblue;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nconst CategorySection = ({ title, children, link }) => (\r\n  <Container>\r\n    <Title>\r\n      {title.toUpperCase()} <ViewMore to={link}>More...</ViewMore>\r\n    </Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nCategorySection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default CategorySection;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 80px;\r\n  margin-top: 80px;\r\n`;\r\n\r\nconst Loading = () => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Loading</title>\r\n    </Helmet>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      🕐\r\n    </span>\r\n  </Container>\r\n);\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${props => props.color};\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    margin-top: 100px;\r\n\r\n`;\r\n\r\nconst Message = ( { text , color }) => (\r\n    <Container>\r\n        <Text color={color}>\r\n            {text}\r\n        </Text>\r\n    </Container>\r\n)\r\n\r\nMessage.proTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired\r\n}\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.15s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n  transition: opacity 0.15s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 2.5px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link\r\n    to={{\r\n      pathname: isMovie ? `/movie/${id}` : `/show/${id}`,\r\n      state: { isMovie: isMovie },\r\n    }}\r\n  >\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w500${imageUrl}`\r\n              : require(\"../assets/happyPig.jpg\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 15 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageurl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport CategorySection from \"Components/CategorySection\";\r\nimport Loading from \"Components/Loading\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upComing, popular, error, loading }) =>\r\n  loading ? (\r\n    <Loading nowPage=\"Movies\" />\r\n  ) : error ? (\r\n    <Message text={error} color=\"red\" />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Movies | Nomfilx</title>\r\n      </Helmet>\r\n      {upComing && upComing.length > 0 && (\r\n        <CategorySection title=\"UpComing\" link=\"/movie/viewMore/upComing/\">\r\n          {upComing.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.original_title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </CategorySection>\r\n      )}\r\n      {nowPlaying && nowPlaying.length > 0 && (\r\n        <CategorySection title=\"Now Playing\" link=\"/movie/viewMore/nowPlaying/\">\r\n          {nowPlaying.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.original_title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </CategorySection>\r\n      )}\r\n\r\n      {popular && popular.length > 0 && (\r\n        <CategorySection title=\"Popular\" link=\"/movie/viewMore/popular/\">\r\n          {popular.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.original_title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </CategorySection>\r\n      )}\r\n\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>\r\n  );\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upComing: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"10923b261ba94d897ac6b81148314a3f\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const movieApi = {\r\n  nowPlaying: (page = 1) =>\r\n    api.get(`movie/now_playing`, {\r\n      params: {\r\n        page: page,\r\n      },\r\n    }),\r\n  upComing: (page = 1) =>\r\n    api.get(`movie/upcoming`, {\r\n      params: {\r\n        page: page,\r\n      },\r\n    }),\r\n  popular: (page = 1) =>\r\n    api.get(`movie/popular`, {\r\n      params: {\r\n        page: page,\r\n      },\r\n    }),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term, page = 1) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n        page: page,\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  popular: (page = 1) =>\r\n    api.get(\"tv/popular\", {\r\n      params: {\r\n        page: page,\r\n      },\r\n    }),\r\n  topRated: (page = 1) =>\r\n    api.get(\"tv/top_rated\", {\r\n      params: {\r\n        page: page,\r\n      },\r\n    }),\r\n  airingToday: (page = 1) =>\r\n    api.get(\"tv/airing_today\", {\r\n      params: {\r\n        page: page,\r\n      },\r\n    }),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term, page = 1) =>\r\n    api.get(`search/tv`, {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n        page: page,\r\n      },\r\n    }),\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { movieApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upComing: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await movieApi.nowPlaying();\r\n      const {\r\n        data: { results: upComing },\r\n      } = await movieApi.upComing();\r\n      const {\r\n        data: { results: popular },\r\n      } = await movieApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upComing,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movies information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upComing={upComing}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"Components/Loading\";\r\nimport CategorySection from \"Components/CategorySection\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  /* margin-bottom: 50px; */\r\n  width: 100%;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  error,\r\n  loading,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) =>\r\n  error ? (\r\n    <Message text={error} color=\"red\" />\r\n  ) : (\r\n    <Container>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"Search Movies or TV Shows\"\r\n          value={searchTerm}\r\n          onChange={updateTerm}\r\n        />\r\n      </Form>\r\n      {loading ? (\r\n        <Loading nowPage=\"Search\" />\r\n      ) : (\r\n        <>\r\n          <Helmet>\r\n            <title>Search Page | Nomfilx</title>\r\n          </Helmet>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <CategorySection\r\n              title=\"Movie Results\"\r\n              link={`/movie/viewMore/search/${searchTerm}`}\r\n            >\r\n              {movieResults.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={\r\n                    movie.release_date\r\n                      ? movie.release_date.substring(0, 4)\r\n                      : null\r\n                  }\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </CategorySection>\r\n          )}\r\n\r\n          {tvResults && tvResults.length > 0 && (\r\n            <CategorySection\r\n              title=\"TV Show Results\"\r\n              link={`/show/viewMore/search/${searchTerm}`}\r\n            >\r\n              {tvResults.map((show) => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.original_name}\r\n                  rating={show.vote_average}\r\n                  year={\r\n                    show.first_air_date\r\n                      ? show.first_air_date.substring(0, 4)\r\n                      : null\r\n                  }\r\n                  isMovie={false}\r\n                />\r\n              ))}\r\n            </CategorySection>\r\n          )}\r\n\r\n          {error && <Message color=\"#e74c3c\" text={error} />}\r\n\r\n          {movieResults &&\r\n            tvResults &&\r\n            movieResults.length === 0 &&\r\n            tvResults.length === 0 && (\r\n              <Message color=\"grey\" text=\"Nothing Found Anything\" />\r\n            )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm(searchTerm);\r\n      this.props.history.push(`/search?query=${searchTerm}`);\r\n    }\r\n  };\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async (query) => {\r\n    try {\r\n      this.setState({ loading: true });\r\n      let movieResults = null;\r\n      let tvResults = null;\r\n      //   console.log(`query:${query}`);\r\n      // query 값이 null이면 , null 값을 반환해서 검색 초기상태가 되게 만들기 위한 로직\r\n      // movieResults = [] 로 초기화를 하면 presenter에서 있는걸로 인식을해서\r\n      // data를 가져오지 못한걸로 판단해서 메세지를 띄운다.\r\n      if (query) {\r\n        ({\r\n          data: { results: movieResults },\r\n        } = await movieApi.search(query));\r\n        ({\r\n          data: { results: tvResults },\r\n        } = await tvApi.search(query));\r\n      }\r\n      this.setState({\r\n        movieResults,\r\n        tvResults,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find results\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n  queryCheck() {\r\n    const {\r\n      location: { search },\r\n    } = this.props;\r\n    const params = new URLSearchParams(search);\r\n    const query = params.get(\"query\");\r\n    //   console.log(`query: ${query}`);\r\n    if (query === null) {\r\n      // 현재 query가 아무값도 없을때 ! searchTerm 초기화시켜주고 리렌더링 그리고 url 이동!\r\n      this.setState({ searchTerm: \"\" });\r\n      this.props.history.push(\"/search\");\r\n    } else {\r\n      this.setState({ searchTerm: query });\r\n    }\r\n    this.searchByTerm(query);\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"hello I am did mount!\");\r\n    this.queryCheck();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    console.log(\"hello I am update ~\");\r\n    const {\r\n      location: { search: prevSearch },\r\n    } = prevProps;\r\n    const {\r\n      location: { search: nowSearch },\r\n    } = this.props;\r\n    // console.log(prevSearch, nowSearch);\r\n\r\n    if (prevSearch !== nowSearch) {\r\n      this.queryCheck();\r\n    }\r\n  }\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport CategorySection from \"Components/CategorySection\";\r\nimport Loading from \"Components/Loading\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ popular, topRated, airingToday, error, loading }) =>\r\n  loading ? (\r\n    <Loading nowPage=\"TV Show\" />\r\n  ) : error ? (\r\n    <Message text={error} color=\"red\" />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>TV Show | Nomfilx</title>\r\n      </Helmet>\r\n      {popular && popular.length > 0 && (\r\n        <CategorySection title=\"Popular\" link=\"/show/viewMore/popular\">\r\n          {popular.map((show) => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              imageUrl={show.poster_path}\r\n              title={show.original_name}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date.substring(0, 4)}\r\n              isMovie={false}\r\n            />\r\n          ))}\r\n        </CategorySection>\r\n      )}\r\n      {topRated && topRated.length > 0 && (\r\n        <CategorySection title=\"TopRated\" link=\"/show/viewMore/topRated\">\r\n          {topRated.map((show) => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              imageUrl={show.poster_path}\r\n              title={show.original_name}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date.substring(0, 4)}\r\n              isMovie={false}\r\n            />\r\n          ))}\r\n        </CategorySection>\r\n      )}\r\n\r\n      {airingToday && airingToday.length > 0 && (\r\n        <CategorySection title=\"Airing Today\" link=\"/show/viewMore/airingToday\">\r\n          {airingToday.map((show) => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              imageUrl={show.poster_path}\r\n              title={show.original_name}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date.substring(0, 4)}\r\n              isMovie={false}\r\n            />\r\n          ))}\r\n        </CategorySection>\r\n      )}\r\n\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>\r\n  );\r\n\r\nTVPresenter.propTypes = {\r\n  popular: PropTypes.array,\r\n  topRated: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    popular: null,\r\n    topRated: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        popular,\r\n        topRated,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV Information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { popular, topRated, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        popular={popular}\r\n        topRated={topRated}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 0.9);\r\n  box-shadow: 0px 1px 2px 1px rgba(222, 37, 16, 0.6);\r\n\r\n  z-index: 10;\r\n`;\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  text-align: center;\r\n  height: 50px;\r\n`;\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-bottom: 3px solid\r\n    ${(props) =>\r\n      Boolean(props.current) ? \"rgba(255, 255, 255, 0.9)\" : \"transparent\"};\r\n  transition: border-bottom 0.2s ease-in-out;\r\n`;\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item>\r\n        <SLink to=\"/\" current={pathname === \"/\" ? 1 : 0}>\r\n          Movies\r\n        </SLink>\r\n      </Item>\r\n      <Item>\r\n        <SLink to=\"/tv\" current={pathname === \"/tv\" ? 1 : 0}>\r\n          TV\r\n        </SLink>\r\n      </Item>\r\n      <Item>\r\n        <SLink to=\"/search\" current={pathname === \"/search\" ? 1 : 0}>\r\n          Search\r\n        </SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: rgba(10, 10, 10, 0.8);\r\n  display: flex;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  width: 100%;\r\n\r\n  background-color: ${(props) =>\r\n    props.selected ? \"#c8224f\" : \"rgba(20, 20, 20, 0.8)\"};\r\n`;\r\n\r\nexport default function DetailTabHeader({\r\n  isVideos,\r\n  isCompanies,\r\n  isCountries,\r\n  isSeasons,\r\n  handleClick,\r\n  selectedButton,\r\n}) {\r\n  //   console.log(isVideos);\r\n  //   console.log(isCompanies);\r\n  //   console.log(isCountries);\r\n  //   console.log(isSeasons);\r\n  //   console.log(selectedButton);\r\n\r\n  return (\r\n    <Container>\r\n      <ButtonContainer>\r\n        {isVideos && (\r\n          <Button\r\n            selected={selectedButton === \"Youtube\"}\r\n            onClick={(e) => handleClick(\"Youtube\")}\r\n          >\r\n            Youtube\r\n          </Button>\r\n        )}\r\n        {isCompanies && (\r\n          <Button\r\n            selected={selectedButton === \"Company\"}\r\n            onClick={(e) => handleClick(\"Company\")}\r\n          >\r\n            Company\r\n          </Button>\r\n        )}\r\n        {isCountries && (\r\n          <Button\r\n            selected={selectedButton === \"Country\"}\r\n            onClick={(e) => handleClick(\"Country\")}\r\n          >\r\n            Country\r\n          </Button>\r\n        )}\r\n        {isSeasons && (\r\n          <Button\r\n            selected={selectedButton === \"Seasons\"}\r\n            onClick={(e) => handleClick(\"Seasons\")}\r\n          >\r\n            Seasons\r\n          </Button>\r\n        )}\r\n      </ButtonContainer>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst VideoContainer = styled.iframe`\r\n  width: 100%;\r\n  height: calc(100% - 40px);\r\n`;\r\n\r\nexport default function TabYoutube({ youtubeKey }) {\r\n  return (\r\n    <VideoContainer\r\n      src={`https://www.youtube.com/embed/${youtubeKey}`}\r\n      allow=\"fullscreen ; encrypted-media; gyroscope; picture-in-picture\"\r\n    ></VideoContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 0;\r\n  overflow: scroll; /*new*/\r\n  /* width */\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n    height: 5px;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: #f1f1f1;\r\n  }\r\n\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n  }\r\n\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  }\r\n`;\r\n\r\nconst BoxContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 20px; /*new*/\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  width: 300px;\r\n  display: flex;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 100%;\r\n  height: 150px;\r\n  margin: auto;\r\n  background-color: rgba(255, 255, 255, 0.95);\r\n  padding: 30px; /*new*/\r\n  max-width: 250px; /*new*/\r\n  margin: 20px;\r\n  border-radius: 15px;\r\n  box-shadow: 0.5px 2px 10px 5px rgba(255, 255, 255, 0.2);\r\n`;\r\n\r\nconst ContextContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 300px;\r\n  height: 150px;\r\n  font-weight: 550;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  margin: auto;\r\n  border-radius: 15px;\r\n  box-shadow: 4px 8px 5px 1px rgba(20, 20, 20, 0.8);\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 18px;\r\n  margin: auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst Country = styled.div`\r\n  font-size: 25px;\r\n  margin: auto;\r\n  text-align: center;\r\n`;\r\n\r\nexport default function TabCompany({ companies }) {\r\n  console.log(companies);\r\n  return (\r\n    <Container>\r\n      {companies &&\r\n        companies.map((company) => (\r\n          <BoxContainer count={companies.length}>\r\n            <LogoContainer>\r\n              <Logo\r\n                count={companies.length}\r\n                src={\r\n                  company.logo_path\r\n                    ? `https://image.tmdb.org/t/p/w200${company.logo_path}`\r\n                    : `${require(\"assets/NoImage.png\")}`\r\n                }\r\n              />\r\n            </LogoContainer>\r\n            <ContextContainer count={companies.length}>\r\n              <Title>{company.name}</Title>\r\n              <Country>\r\n                {company.origin_country ? company.origin_country : \"Unknown\"}\r\n              </Country>\r\n            </ContextContainer>\r\n          </BoxContainer>\r\n        ))}\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 0;\r\n  overflow: scroll; /*new*/\r\n  /* width */\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n    height: 5px;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: #f1f1f1;\r\n  }\r\n\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n  }\r\n\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  }\r\n`;\r\n\r\nconst BoxContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 20px; /*new*/\r\n`;\r\n\r\nconst FlagContainer = styled.div`\r\n  width: 300px;\r\n  display: flex;\r\n`;\r\n\r\nconst Flag = styled.img`\r\n  /* width: 30%;\r\n  margin: auto; */\r\n  width: 100%;\r\n  height: 150px;\r\n  margin: auto;\r\n  padding: 30px; /*new*/\r\n  max-width: 250px; /*new*/\r\n  border-radius: 15px;\r\n  box-shadow: 0.5px 2px 10px 5px rgba(255, 255, 255, 0.2);\r\n`;\r\nconst CountryContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: auto;\r\n`;\r\n\r\nconst Country = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  width: 300px;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: 550;\r\n  font-size: 25px;\r\n  border-radius: 15px;\r\n  box-shadow: 4px 8px 5px 1px rgba(20, 20, 20, 0.8);\r\n`;\r\n\r\nexport default function TabCountry({ countries }) {\r\n  return (\r\n    <Container>\r\n      {countries &&\r\n        countries.map((country) => (\r\n          <BoxContainer count={countries.length}>\r\n            <FlagContainer>\r\n              <Flag\r\n                count={countries.length}\r\n                src={\r\n                  country.iso_3166_1\r\n                    ? `https://www.countryflags.io/${country.iso_3166_1}/shiny/64.png`\r\n                    : `${require(\"assets/NoImage.png\")}`\r\n                }\r\n              />\r\n            </FlagContainer>\r\n            <CountryContainer>\r\n              <Country count={countries.length}>{country.name}</Country>\r\n            </CountryContainer>\r\n          </BoxContainer>\r\n        ))}\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 0 10px 10px;\r\n  overflow: scroll; /*new*/\r\n  /* width */\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n    height: 5px;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: #f1f1f1;\r\n  }\r\n\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n  }\r\n\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  }\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst SeasonName = styled.span`\r\n  width: 100%;\r\n  padding: 20px;\r\n  margin-top: 15px;\r\n  background-color: #640;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 200px;\r\n  height: 300px;\r\n  border-radius: 15px;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  margin: 20px;\r\n  box-shadow: 0.5px 2px 10px 5px rgba(255, 255, 255, 0.2);\r\n`;\r\n\r\nconst OverviewContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  line-height: 1.5;\r\n  font-size: ${(props) => (props.isOverView ? \"30px\" : \"14px\")};\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst OverView = styled.p``;\r\n\r\nexport default function TabSeason({ seasons }) {\r\n  return (\r\n    <Container>\r\n      {seasons &&\r\n        seasons.map((season) => (\r\n          <>\r\n            {/* Sometimes season has null value ! It needs to check it  */}\r\n            {season.overview === null ? (season.overview = \"\") : null}\r\n            <SeasonName>{season.name}</SeasonName>\r\n            <ItemContainer>\r\n              <LogoContainer>\r\n                <Logo\r\n                  src={\r\n                    season.poster_path\r\n                      ? `https://image.tmdb.org/t/p/w200${season.poster_path}`\r\n                      : `${require(\"assets/NoImage.png\")}`\r\n                  }\r\n                />\r\n              </LogoContainer>\r\n              <OverviewContainer isOverView={season.overview.length < 1}>\r\n                <OverView>\r\n                  {season.overview.length < 1\r\n                    ? \"( No OverView )\"\r\n                    : season.overview.length > 730\r\n                    ? `${season.overview.slice(0, 730)}...`\r\n                    : season.overview}\r\n                </OverView>\r\n              </OverviewContainer>\r\n            </ItemContainer>\r\n          </>\r\n        ))}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport DetailTabHeader from \"./DetailTabHeader\";\r\nimport TabYoutube from \"./TabYoutube\";\r\nimport TabCompany from \"./TabCompany\";\r\nimport TabCountry from \"./TabCountry\";\r\nimport TabSeason from \"./TabSeason\";\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 80%;\r\n  background-color: rgba(30, 30, 30, 0.8);\r\n  height: 100%;\r\n  max-height: 375px;\r\n`;\r\n\r\nexport default class DetailTabContainer extends Component {\r\n  state = {\r\n    selectedButton: null,\r\n    seasons: null,\r\n    results: null,\r\n    production_companies: null,\r\n    production_countries: null,\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"Did Update in Tab\");\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"Did Mount in Tab\");\r\n    let selectedButton = null;\r\n    const {\r\n      result: {\r\n        videos: { results },\r\n        production_companies,\r\n        production_countries,\r\n      },\r\n      isMovie,\r\n    } = this.props;\r\n    let seasons = null;\r\n    if (!isMovie) {\r\n      ({\r\n        result: { seasons: seasons },\r\n      } = this.props);\r\n    }\r\n\r\n    if (results && results.length > 0) {\r\n      selectedButton = \"Youtube\";\r\n    } else if (production_companies && production_companies.length > 0) {\r\n      selectedButton = \"Company\";\r\n    } else if (production_countries && production_countries.length > 0) {\r\n      selectedButton = \"Country\";\r\n    } else if (seasons && seasons.length > 0) {\r\n      selectedButton = \"Seasons\";\r\n    }\r\n    this.setState({\r\n      selectedButton,\r\n      seasons,\r\n      results,\r\n      production_companies,\r\n      production_countries,\r\n    });\r\n  }\r\n\r\n  handleClick = (selectedButton) => {\r\n    this.setState({\r\n      selectedButton,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedButton,\r\n      seasons,\r\n      results,\r\n      production_companies,\r\n      production_countries,\r\n    } = this.state;\r\n    const isVideos = results && results.length > 0;\r\n    const isCompanies = production_companies && production_companies.length > 0;\r\n    const isCountries = production_countries && production_countries.length > 0;\r\n    const isSeasons = seasons && seasons.length > 0;\r\n    console.log(\"render -- 1 -- \");\r\n    /* If selectedButton is null, wait til next rendering  */\r\n    return selectedButton ? (\r\n      <Container>\r\n        <DetailTabHeader\r\n          isVideos={isVideos}\r\n          isCompanies={isCompanies}\r\n          isCountries={isCountries}\r\n          isSeasons={isSeasons}\r\n          handleClick={this.handleClick}\r\n          selectedButton={selectedButton}\r\n        />\r\n        {console.log(\"render -- 2 -- \")}\r\n        {selectedButton === \"Youtube\" && isVideos && results.length > 0 && (\r\n          <TabYoutube youtubeKey={results[0].key} />\r\n        )}\r\n        {selectedButton === \"Company\" && production_companies.length > 0 && (\r\n          <TabCompany companies={production_companies} />\r\n        )}\r\n        {selectedButton === \"Country\" && production_countries.length > 0 && (\r\n          <TabCountry countries={production_countries} />\r\n        )}\r\n        {selectedButton === \"Seasons\" && seasons.length > 0 && (\r\n          <TabSeason seasons={seasons} />\r\n        )}\r\n      </Container>\r\n    ) : null;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"Components/Loading\";\r\nimport Helmet from \"react-helmet\";\r\nimport DetailTabContainer from \"Components/DetailTab/DetailTabContainer\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  height: calc(105vh - 50px);\r\n  width: 100%;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center, center;\r\n  background-size: cover;\r\n  filter: blur(2px);\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: calc(120vh - 100px);\r\n  position: relative;\r\n`;\r\n\r\nconst Cover = styled.img`\r\n  top: 80px;\r\n  width: 30%;\r\n  height: calc(100vh - 150px);\r\n  background-size: cover;\r\n  background-position: center, center;\r\n  border-radius: 5px;\r\n  position: sticky;\r\n  margin: 20px;\r\n  box-shadow: 0.5px 2px 10px 5px rgba(255, 255, 255, 0.2);\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n  display: block;\r\n`;\r\nconst Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 35px;\r\n`;\r\n\r\nconst IMDB = styled.a``;\r\n\r\nconst Img = styled.img`\r\n  margin-top: 6px;\r\n  margin-left: 10px;\r\n  background-image: url(${(props) => props.bgImage});\r\n  width: 52px;\r\n  height: 30px;\r\n  background-position: center, center;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  line-height: 1.5;\r\n  opacity: 0.7;\r\n  width: 60%;\r\n  height: 100px;\r\n  margin-bottom: 30px;\r\n  display: block;\r\n`;\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n`;\r\nconst DetailPresenter = ({ result, error, loading, isMovie, changeParam }) => {\r\n  function getRandomArbitrary(min, max) {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n  }\r\n  return loading ? (\r\n    <Loading nowPage=\"Detail\">{console.log(\"Here is Loading(Detail)\")}</Loading>\r\n  ) : (\r\n    <Container>\r\n      {console.log(\"Here is DetailPresenter\")}\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={\r\n          result.backdrop_path\r\n            ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\r\n            : result.poster_path\r\n            ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n            : require(\"assets/happyPig.jpg\")\r\n        }\r\n      />\r\n\r\n      <Content>\r\n        <Cover\r\n          src={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"assets/happyPig.jpg\")\r\n          }\r\n        />\r\n        <Button onClick={(e) => changeParam(getRandomArbitrary(100, 1000))}>\r\n          Click Button\r\n        </Button>\r\n        <Data>\r\n          <Header>\r\n            <Title>\r\n              {result.original_title\r\n                ? result.original_title\r\n                : result.original_name}\r\n            </Title>\r\n            {result.imdb_id ? (\r\n              <IMDB\r\n                href={`https://www.imdb.com/title/${result.imdb_id}`}\r\n                target=\"_blank\"\r\n              >\r\n                <Img bgImage={require(\"../../assets/imdb.PNG\")} />\r\n              </IMDB>\r\n            ) : null}\r\n          </Header>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date\r\n                ? result.first_air_date.substring(0, 4)\r\n                : \"❌\"}\r\n            </Item>\r\n            <Divider>▪</Divider>\r\n            <Item>\r\n              {result.runtime\r\n                ? `${result.runtime} min`\r\n                : result.episode_run_time\r\n                ? `${result.episode_run_time[0]} min`\r\n                : \"❤\"}\r\n            </Item>\r\n            <Divider>▪</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n\r\n          <Overview>\r\n            {result.overview.length > 500\r\n              ? `${result.overview.slice(0, 500)}...`\r\n              : result.overview}\r\n          </Overview>\r\n\r\n          <DetailTabContainer result={result} isMovie={isMovie} />\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\n  DetailPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n    isMovie: PropTypes.bool.isRequired,\r\n  };\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"constructor!!\");\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    console.log(\"Did Mount !! \");\r\n    // console.log(this.props);\r\n    this.getData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      match: {\r\n        params: { id: prevId },\r\n      },\r\n    } = prevProps;\r\n    const {\r\n      match: {\r\n        params: { id: nowId },\r\n      },\r\n    } = this.props;\r\n    console.log(prevId, nowId);\r\n    if (prevId !== nowId) {\r\n      this.getData();\r\n    }\r\n  }\r\n  getData = async () => {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n\r\n    const { isMovie } = this.state;\r\n    const parsedIntId = parseInt(id);\r\n    if (isNaN(parsedIntId)) {\r\n      console.log(\"Hello Buddy\");\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await movieApi.movieDetail(parsedIntId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedIntId));\r\n      }\r\n    } catch {\r\n      // If api couldn't get data\r\n      // 임시로\r\n      return push(\"/\");\r\n      this.setState({ error: \"Can not find anything\" });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n        result,\r\n      });\r\n    }\r\n  };\r\n  changeParam = (id) => {\r\n    const {\r\n      history: { push },\r\n    } = this.props;\r\n    push(`/movie/${id}`);\r\n  };\r\n  render() {\r\n    const { result, error, loading, isMovie } = this.state;\r\n    console.log(\"render -- 0 -- \");\r\n    return (\r\n      <DetailPresenter\r\n        result={result}\r\n        error={error}\r\n        loading={loading}\r\n        isMovie={isMovie}\r\n        changeParam={this.changeParam}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  width: 100%;\r\n  min-height: 350px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.15s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n  transition: opacity 0.15s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 2.5px;\r\n  font-size: 14px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst ViewMorePoster = ({\r\n  id,\r\n  imageUrl,\r\n  title,\r\n  rating,\r\n  year,\r\n  isMovie = false,\r\n}) => (\r\n  <Link\r\n    to={{\r\n      pathname: isMovie ? `/movie/${id}` : `/show/${id}`,\r\n      state: { isMovie: isMovie },\r\n    }}\r\n  >\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w500${imageUrl}`\r\n              : require(\"../assets/happyPig.jpg\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 15 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nViewMorePoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageurl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default ViewMorePoster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\nconst Grid = styled.div`\r\n  justify-content: space-between;\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 200px);\r\n  grid-gap: 20px;\r\n`;\r\n\r\nconst ViewMoreSection = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title.toUpperCase()}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nViewMoreSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default ViewMoreSection;\r\n","import React from \"react\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport styled from \"styled-components\";\r\nimport Message from \"../../Components/Message\";\r\nimport Helmet from \"react-helmet\";\r\nimport ViewMorePoster from \"../../Components/ViewMorePoster\";\r\nimport ViewMoreSection from \"../../Components/ViewMoreSection\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Container = styled.div`\r\n  overflow: auto;\r\n  padding: 20px;\r\n`;\r\nconst ViewMorePresenter = ({ results, loading, error, isMovie, subject }) => {\r\n  return loading ? (\r\n    <Loading />\r\n  ) : error ? (\r\n    <Message text={error} color=\"red\" />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {isMovie ? \"Movie\" : \"TV\"} | {subject}\r\n        </title>\r\n      </Helmet>\r\n      <ViewMoreSection title={subject}>\r\n        {results && results.length > 0 && isMovie\r\n          ? results.map((result) => {\r\n              // console.log(\"check!!\");\r\n              // console.log(result);\r\n              return (\r\n                <ViewMorePoster\r\n                  key={result.id}\r\n                  id={result.id}\r\n                  imageUrl={result.poster_path}\r\n                  title={result.original_title}\r\n                  rating={result.vote_average}\r\n                  year={\r\n                    result.release_date\r\n                      ? result.release_date.substring(0, 4)\r\n                      : \"( )\"\r\n                  }\r\n                  isMovie={true}\r\n                />\r\n              );\r\n            })\r\n          : results.map((result) => (\r\n              <ViewMorePoster\r\n                key={result.id}\r\n                id={result.id}\r\n                imageUrl={result.poster_path}\r\n                title={result.original_name}\r\n                rating={result.vote_average}\r\n                year={result.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n      </ViewMoreSection>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ViewMorePresenter;\r\n","import ViewMoreContainer from \"./ViewMoreContainer\";\r\n\r\nexport default ViewMoreContainer;\r\n","import React from \"react\";\r\nimport ViewMorePresenter from \"./ViewMorePresenter\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    results: null,\r\n    loading: true,\r\n    error: null,\r\n    page: 3,\r\n    scroll: false,\r\n  };\r\n\r\n  async getData() {\r\n    const {\r\n      match: {\r\n        params: { type, subject, query },\r\n      },\r\n    } = this.props;\r\n    console.log(`type:${type} , subject:${subject}, query:${query}`);\r\n\r\n    try {\r\n      if (type === \"movie\") {\r\n        let movies1 = [];\r\n        let movies2 = [];\r\n        if (subject === \"upComing\") {\r\n          ({\r\n            data: { results: movies1 },\r\n          } = await movieApi.upComing(1));\r\n          ({\r\n            data: { results: movies2 },\r\n          } = await movieApi.upComing(2));\r\n        } else if (subject === \"nowPlaying\") {\r\n          ({\r\n            data: { results: movies1 },\r\n          } = await movieApi.nowPlaying(1));\r\n          ({\r\n            data: { results: movies2 },\r\n          } = await movieApi.nowPlaying(2));\r\n        } else if (subject === \"popular\") {\r\n          ({\r\n            data: { results: movies1 },\r\n          } = await movieApi.popular(1));\r\n          ({\r\n            data: { results: movies2 },\r\n          } = await movieApi.popular(2));\r\n        } else if (subject === \"search\") {\r\n          ({\r\n            data: { results: movies1 },\r\n          } = await movieApi.search(query, 1));\r\n          ({\r\n            data: { results: movies2 },\r\n          } = await movieApi.search(query, 2));\r\n        }\r\n        const movies = [...movies1, ...movies2];\r\n        this.setState({\r\n          results: movies,\r\n        });\r\n      } else if (type === \"show\") {\r\n        let shows1 = [];\r\n        let shows2 = [];\r\n        if (subject === \"popular\") {\r\n          ({\r\n            data: { results: shows1 },\r\n          } = await tvApi.popular(1));\r\n          ({\r\n            data: { results: shows2 },\r\n          } = await tvApi.popular(2));\r\n        } else if (subject === \"topRated\") {\r\n          ({\r\n            data: { results: shows1 },\r\n          } = await tvApi.topRated(1));\r\n          ({\r\n            data: { results: shows2 },\r\n          } = await tvApi.topRated(2));\r\n        } else if (subject === \"airingToday\") {\r\n          ({\r\n            data: { results: shows1 },\r\n          } = await tvApi.airingToday(1));\r\n          ({\r\n            data: { results: shows2 },\r\n          } = await tvApi.airingToday(2));\r\n        }\r\n        const shows = [...shows1, ...shows2];\r\n        this.setState({\r\n          results: shows,\r\n        });\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can not find Data from API\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n  async getDataMore(page) {\r\n    const {\r\n      match: {\r\n        params: { type, subject, query },\r\n      },\r\n    } = this.props;\r\n    const { results, scroll } = this.state;\r\n    // dconsole.log(`${type} and ${subject} and ${query}`);\r\n    try {\r\n      if (scroll) {\r\n        if (type === \"movie\") {\r\n          let movies1 = [];\r\n\r\n          if (subject === \"upComing\") {\r\n            ({\r\n              data: { results: movies1 },\r\n            } = await movieApi.upComing(page));\r\n          }\r\n          if (subject === \"nowPlaying\") {\r\n            ({\r\n              data: { results: movies1 },\r\n            } = await movieApi.nowPlaying(page));\r\n          }\r\n          if (subject === \"popular\") {\r\n            ({\r\n              data: { results: movies1 },\r\n            } = await movieApi.popular(page));\r\n          }\r\n          if (subject === \"search\") {\r\n            ({\r\n              data: { results: movies1 },\r\n            } = await movieApi.search(query, page));\r\n          }\r\n          const movies = [...results, ...movies1];\r\n          // console.log(`${type} and ${subject} and ${page}`);\r\n          // console.log(movies1);\r\n\r\n          /*  만약 movies1.length가 0이면 (더이상 가져올 데이터가 없으면)\r\n            페이지업그레이드 안하고 스테이트 업데이트도 안하고 그대로 둔다 */\r\n          if (movies1.length > 0) {\r\n            this.setState((current) => ({\r\n              results: movies,\r\n              scroll: false,\r\n              page: current.page + 1,\r\n            }));\r\n          }\r\n        } else if (type === \"show\") {\r\n          let shows1 = [];\r\n          if (subject === \"popular\") {\r\n            ({\r\n              data: { results: shows1 },\r\n            } = await tvApi.popular(page));\r\n          }\r\n          if (subject === \"topRated\") {\r\n            ({\r\n              data: { results: shows1 },\r\n            } = await tvApi.topRated(page));\r\n          }\r\n          if (subject === \"airingToday\") {\r\n            ({\r\n              data: { results: shows1 },\r\n            } = await tvApi.airingToday(page));\r\n          }\r\n          const movies = [...results, ...shows1];\r\n\r\n          this.setState((current) => ({\r\n            results: movies,\r\n            scroll: false,\r\n            page: current.page + 1,\r\n          }));\r\n        }\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can not find Data from APIzz\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n  infiniteScroll(e) {\r\n    const { scrollTop, clientHeight, scrollHeight } = document.documentElement;\r\n\r\n    const { results, scroll } = this.state;\r\n    // if (results && scrollTop + clientHeight >= scrollHeight - 600) {\r\n    if (results && window.scrollY + clientHeight >= scrollHeight - 600) {\r\n      // ㄴ state의 results 값을 체크해주지 않으면\r\n      // ㄴ 스크롤이 내려가있는 상태에서 새로고침시 getData 값을 가져오기 이전에\r\n      // ㄴ getDataMore를 실행해버린다 (그러면서 오류가 발생한다)\r\n      // ㄴ\r\n      if (scroll === false) {\r\n        // ㄴ 이렇게 걸러주지 않으면 스크롤이 내려가서 추가로드할때 로드가 완료될때까지 (false로 돌아올때까지)\r\n        // ㄴ 계속 this.setState를 실행시켜서 필요없는 렌더링을 몇번이고 한다\r\n        this.setState({ scroll: true });\r\n        this.getDataMore(this.state.page);\r\n      }\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"didMount!\");\r\n    this.getData();\r\n    window.addEventListener(\"scroll\", this.infiniteScroll.bind(this));\r\n  }\r\n  componentDidUpdate() {}\r\n  render() {\r\n    const {\r\n      match: {\r\n        params: { type, subject },\r\n      },\r\n    } = this.props;\r\n    const { results, loading, error } = this.state;\r\n    console.log(\"Render\");\r\n    //console.log(results);\r\n    return (\r\n      <ViewMorePresenter\r\n        results={results}\r\n        loading={loading}\r\n        error={error}\r\n        isMovie={type === \"movie\"}\r\n        subject={subject}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport Search from \"Routes/Search\";\r\nimport TV from \"Routes/TV\";\r\nimport Header from \"Components/Header\";\r\nimport Detail from \"Routes/Detail\";\r\nimport ViewMore from \"Routes/ViewMore\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <Header />\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/tv\" exact component={TV} />\r\n      <Route path=\"/search\" exact component={Search} />\r\n      <Route path=\"/movie/:id\" exact component={Detail} />\r\n      <Route path=\"/show/:id\" exact component={Detail} />\r\n      <Route path=\"/:type/viewMore/:subject\" exact component={ViewMore} />\r\n      <Route path=\"/:type/viewMore/:subject/:query\" component={ViewMore} />\r\n      {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n    </Switch>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { reset } from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration: none;\r\n        color:inherit;\r\n    }\r\n    * {\r\n        box-sizing:border-box;\r\n    }\r\n    body {\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\r\n         Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n         font-size: 12px;\r\n         background-color: rgba(20, 20, 20 , 1);\r\n         color:white;\r\n         padding-top: 50px;\r\n    }\r\n    button {\r\n        border: none;\r\n        outline: none;\r\n        font: inherit;\r\n        color: inherit;\r\n        background: none\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n      <Router /> \n      <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from \"Components/App\";\nimport \"./api\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}