{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\React\\\\DaroFlix\\\\src\\\\Routes\\\\Search\\\\SearchPresenter.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loading from \"Components/Loading\";\nimport CategorySection from \"Components/CategorySection\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\nconst Form = styled.form`\n  /* margin-bottom: 50px; */\n  width: 100%;\n  margin-bottom: 50px;\n`;\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm\n}) => error ? /*#__PURE__*/React.createElement(Message, {\n  text: error,\n  color: \"red\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n}) : /*#__PURE__*/React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Form, {\n  onSubmit: handleSubmit,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Input, {\n  placeholder: \"Search Movies or TV Shows\",\n  value: searchTerm,\n  onChange: updateTerm,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }\n})), loading ? /*#__PURE__*/React.createElement(Loading, {\n  nowPage: \"Search\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }\n}) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"title\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }\n}, \"Search Page | Nomfilx\")), movieResults && movieResults.length > 0 && /*#__PURE__*/React.createElement(CategorySection, {\n  title: \"Movie Results\",\n  link: `/movie/viewMore/search/${searchTerm}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }\n}, movieResults.map(movie => /*#__PURE__*/React.createElement(Poster, {\n  key: movie.id,\n  id: movie.id,\n  imageUrl: movie.poster_path,\n  title: movie.original_title,\n  rating: movie.vote_average,\n  year: movie.release_date ? movie.release_date.substring(0, 4) : null,\n  isMovie: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 17\n  }\n}))), tvResults && tvResults.length > 0 && /*#__PURE__*/React.createElement(CategorySection, {\n  title: \"TV Show Results\",\n  link: `/show/viewMore/search/${searchTerm}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 13\n  }\n}, tvResults.map(show => /*#__PURE__*/React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  imageUrl: show.poster_path,\n  title: show.original_name,\n  rating: show.vote_average,\n  year: show.first_air_date ? show.first_air_date.substring(0, 4) : null,\n  isMovie: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 17\n  }\n}))), error && /*#__PURE__*/React.createElement(Message, {\n  color: \"#e74c3c\",\n  text: error,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 21\n  }\n}), movieResults && tvResults && movieResults.length === 0 && tvResults.length === 0 && /*#__PURE__*/React.createElement(Message, {\n  color: \"grey\",\n  text: \"Nothing Found Anything\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 15\n  }\n})));\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\nexport default SearchPresenter;","map":{"version":3,"sources":["D:/Documents/React/DaroFlix/src/Routes/Search/SearchPresenter.js"],"names":["React","PropTypes","styled","Loading","CategorySection","Message","Poster","Helmet","Container","div","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","error","loading","handleSubmit","updateTerm","length","map","movie","id","poster_path","original_title","vote_average","release_date","substring","show","original_name","first_air_date","propTypes","array","string","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"Components/Loading\";\r\nimport CategorySection from \"Components/CategorySection\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  /* margin-bottom: 50px; */\r\n  width: 100%;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  error,\r\n  loading,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) =>\r\n  error ? (\r\n    <Message text={error} color=\"red\" />\r\n  ) : (\r\n    <Container>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"Search Movies or TV Shows\"\r\n          value={searchTerm}\r\n          onChange={updateTerm}\r\n        />\r\n      </Form>\r\n      {loading ? (\r\n        <Loading nowPage=\"Search\" />\r\n      ) : (\r\n        <>\r\n          <Helmet>\r\n            <title>Search Page | Nomfilx</title>\r\n          </Helmet>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <CategorySection\r\n              title=\"Movie Results\"\r\n              link={`/movie/viewMore/search/${searchTerm}`}\r\n            >\r\n              {movieResults.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={\r\n                    movie.release_date\r\n                      ? movie.release_date.substring(0, 4)\r\n                      : null\r\n                  }\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </CategorySection>\r\n          )}\r\n\r\n          {tvResults && tvResults.length > 0 && (\r\n            <CategorySection\r\n              title=\"TV Show Results\"\r\n              link={`/show/viewMore/search/${searchTerm}`}\r\n            >\r\n              {tvResults.map((show) => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.original_name}\r\n                  rating={show.vote_average}\r\n                  year={\r\n                    show.first_air_date\r\n                      ? show.first_air_date.substring(0, 4)\r\n                      : null\r\n                  }\r\n                  isMovie={false}\r\n                />\r\n              ))}\r\n            </CategorySection>\r\n          )}\r\n\r\n          {error && <Message color=\"#e74c3c\" text={error} />}\r\n\r\n          {movieResults &&\r\n            tvResults &&\r\n            movieResults.length === 0 &&\r\n            tvResults.length === 0 && (\r\n              <Message color=\"grey\" text=\"Nothing Found Anything\" />\r\n            )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n"]},"metadata":{},"sourceType":"module"}