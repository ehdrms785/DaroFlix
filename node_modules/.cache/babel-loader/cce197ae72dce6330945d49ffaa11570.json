{"ast":null,"code":"import _taggedTemplateLiteral from\"D:\\\\Documents\\\\React\\\\DaroFlix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  all: unset;\\n  font-size: 28px;\\n  width: 100%;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  /* margin-bottom: 50px; */\\n  width: 100%;\\n  margin-bottom: 50px;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  padding: 0px 20px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import styled from\"styled-components\";import Loading from\"Components/Loading\";import CategorySection from\"Components/CategorySection\";import Message from\"Components/Message\";import Poster from\"Components/Poster\";import Helmet from\"react-helmet\";var Container=styled.div(_templateObject());var Form=styled.form(_templateObject2());var Input=styled.input(_templateObject3());var SearchPresenter=function SearchPresenter(_ref){var movieResults=_ref.movieResults,tvResults=_ref.tvResults,searchTerm=_ref.searchTerm,error=_ref.error,loading=_ref.loading,handleSubmit=_ref.handleSubmit,updateTerm=_ref.updateTerm;return error?/*#__PURE__*/React.createElement(Message,{text:error,color:\"red\"}):/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Input,{placeholder:\"Search Movies or TV Shows\",value:searchTerm,onChange:updateTerm})),loading?/*#__PURE__*/React.createElement(Loading,{nowPage:\"Search\"}):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Helmet,null,/*#__PURE__*/React.createElement(\"title\",null,\"Search Page | Nomfilx\")),movieResults&&movieResults.length>0&&/*#__PURE__*/React.createElement(CategorySection,{title:\"Movie Results\",link:\"/movie/viewMore/search/\".concat(searchTerm)},movieResults.map(function(movie){return/*#__PURE__*/React.createElement(Poster,{key:movie.id,id:movie.id,imageUrl:movie.poster_path,title:movie.original_title,rating:movie.vote_average,year:movie.release_date?movie.release_date.substring(0,4):null,isMovie:true});})),tvResults&&tvResults.length>0&&/*#__PURE__*/React.createElement(CategorySection,{title:\"TV Show Results\",link:\"/show/viewMore/search/\".concat(searchTerm)},tvResults.map(function(show){return/*#__PURE__*/React.createElement(Poster,{key:show.id,id:show.id,imageUrl:show.poster_path,title:show.original_name,rating:show.vote_average,year:show.first_air_date?show.first_air_date.substring(0,4):null,isMovie:false});})),error&&/*#__PURE__*/React.createElement(Message,{color:\"#e74c3c\",text:error}),movieResults&&tvResults&&movieResults.length===0&&tvResults.length===0&&/*#__PURE__*/React.createElement(Message,{color:\"grey\",text:\"Nothing Found Anything\"})));};export default SearchPresenter;","map":{"version":3,"sources":["D:/Documents/React/DaroFlix/src/Routes/Search/SearchPresenter.js"],"names":["React","styled","Loading","CategorySection","Message","Poster","Helmet","Container","div","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","error","loading","handleSubmit","updateTerm","length","map","movie","id","poster_path","original_title","vote_average","release_date","substring","show","original_name","first_air_date"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"Components/Loading\";\r\nimport CategorySection from \"Components/CategorySection\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  /* margin-bottom: 50px; */\r\n  width: 100%;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  error,\r\n  loading,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) =>\r\n  error ? (\r\n    <Message text={error} color=\"red\" />\r\n  ) : (\r\n    <Container>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"Search Movies or TV Shows\"\r\n          value={searchTerm}\r\n          onChange={updateTerm}\r\n        />\r\n      </Form>\r\n      {loading ? (\r\n        <Loading nowPage=\"Search\" />\r\n      ) : (\r\n        <>\r\n          <Helmet>\r\n            <title>Search Page | Nomfilx</title>\r\n          </Helmet>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <CategorySection\r\n              title=\"Movie Results\"\r\n              link={`/movie/viewMore/search/${searchTerm}`}\r\n            >\r\n              {movieResults.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={\r\n                    movie.release_date\r\n                      ? movie.release_date.substring(0, 4)\r\n                      : null\r\n                  }\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </CategorySection>\r\n          )}\r\n\r\n          {tvResults && tvResults.length > 0 && (\r\n            <CategorySection\r\n              title=\"TV Show Results\"\r\n              link={`/show/viewMore/search/${searchTerm}`}\r\n            >\r\n              {tvResults.map((show) => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.original_name}\r\n                  rating={show.vote_average}\r\n                  year={\r\n                    show.first_air_date\r\n                      ? show.first_air_date.substring(0, 4)\r\n                      : null\r\n                  }\r\n                  isMovie={false}\r\n                />\r\n              ))}\r\n            </CategorySection>\r\n          )}\r\n\r\n          {error && <Message color=\"#e74c3c\" text={error} />}\r\n\r\n          {movieResults &&\r\n            tvResults &&\r\n            movieResults.length === 0 &&\r\n            tvResults.length === 0 && (\r\n              <Message color=\"grey\" text=\"Nothing Found Anything\" />\r\n            )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n"]},"metadata":{},"sourceType":"module"}