{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\React\\\\DaroFlix\\\\src\\\\Components\\\\DetailTab\\\\TabCasts.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport ModalPortal from \"../ModalPortal\";\nimport CastModal from \"../CastModal\";\nconst BigContainer = styled.div`\n  position: relative;\n  margin-right: 40px;\n  text-align: center;\n  margin-top: 30px;\n`;\nconst Container = styled.div`\n  position: relative;\n  height: 290px;\n  max-width: 160px;\n  margin: 0 auto;\n\n  /* 원래는 ::after 였는데 after 하니까 버튼영역을 덮어서 이미지를 가려버림 */\n  &::before {\n    content: \"\";\n    display: block;\n    width: 100%;\n    /* height: 175px; */\n    outline: 5px solid #72a9e3;\n    position: absolute;\n    /* top: 56px; */\n    left: 8px;\n    /* max-width: 150px; */\n    width: 200px;\n    height: 216px;\n    top: 24px;\n  }\n`;\nconst SliderWrapper = styled.div`\n  height: 100%;\n  /* width:100%; */\n  display: flex;\n  align-items: center;\n  position: absolute;\n  transition: transform 500ms cubic-bezier(0.413, 0.03, 0.1, 0.4);\n`;\nconst CastContainer = styled.div`\n  ${props => props.index === props.nowTarget ? \"opacity:1;transform: scale(1);\" : Math.abs(props.nowTarget - props.index) > 1 ? \"opacity:0;\" : \"opacity:0.5; transform: scale(0.7);\"}\n  transition: all 0.3s linear;\n`;\nconst Cover = styled.img`\n  /* width: 150px;\n  height: 180px; */\n  width: 200px;\n  height: 220px;\n`;\nconst CastName = styled.span`\n  display: block;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 600;\n  margin-top: 8px;\n`;\nconst PrevButton = styled.button`\n  font-size: 20px;\n  position: absolute;\n  left: 0;\n  top: -22px;\n  z-index: 1;\n\n  &:disabled {\n    color: grey;\n  }\n`;\nconst NextButton = styled.button`\n  font-size: 20px;\n  position: absolute;\n  right: -36px;\n  top: -22px;\n  z-index: 1;\n  &:disabled {\n    color: grey;\n  }\n`;\nconst CastButton = styled.button``;\nexport default class TabCasts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.nextButton = () => {\n      let newIndex = this.state.index + 1;\n      this.setState({\n        index: newIndex\n      });\n    };\n\n    this.preButton = () => {\n      let newIndex = this.state.index - 1;\n      this.setState({\n        index: newIndex\n      });\n    };\n\n    this.handleModalOpen = cast_id => {\n      this.setState({\n        modalOpen: true,\n        cast_id: cast_id\n      });\n    };\n\n    this.handleModalClose = () => {\n      this.setState({\n        modalOpen: false,\n        cast_id: null\n      });\n    };\n\n    this.state = {\n      index: 0,\n      modalOpen: false,\n      cast_id: null\n    };\n    this.nextButton = this.nextButton.bind(this);\n    this.preButton = this.preButton.bind(this);\n    this.handleModalOpen = this.handleModalOpen.bind(this);\n    this.handleModalClose = this.handleModalClose.bind(this);\n  }\n\n  render() {\n    const {\n      index,\n      modalOpen,\n      cast_id\n    } = this.state;\n    const {\n      casts_result\n    } = this.props;\n    return /*#__PURE__*/React.createElement(BigContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, \" \", /*#__PURE__*/React.createElement(PrevButton, {\n      onClick: () => this.preButton(),\n      disabled: index === 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, \"Prev\"), /*#__PURE__*/React.createElement(NextButton, {\n      onClick: () => this.nextButton(),\n      disabled: index === casts_result.length - 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, \"Next\"), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SliderWrapper, {\n      style: {\n        transform: `translateX(-${this.state.index * (100 / casts_result.length)}%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, casts_result && casts_result.map((cast, idx) => /*#__PURE__*/React.createElement(CastContainer, {\n      index: idx,\n      nowTarget: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CastButton // 클릭한 cast.id 값을 state로 업데이트를 시킨다\n    // 그 업데이트 한 값을  CastModal 컴포넌트로 넘긴다\n    // 그 cast_id 값을 모달로 넘겨서 그 cast_id값으로 해당 인물디테일 가져온다\n    , {\n      onClick: () => this.handleModalOpen(cast.id),\n      disabled: idx !== index // idx : map함수의 인수(인덱스) , index : state의 index (현재 포커스 index값)\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Cover, {\n      src: cast.profile_path ? `https://image.tmdb.org/t/p/w200${cast.profile_path}` : require(\"../../assets/noProfile.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CastName, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, cast.name.length < 20 ? cast.name : `${cast.name.substring(0, 18)}..`))))), modalOpen && /*#__PURE__*/React.createElement(ModalPortal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CastModal, {\n      cast_id: cast_id,\n      onClose: this.handleModalClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["D:/Documents/React/DaroFlix/src/Components/DetailTab/TabCasts.js"],"names":["React","styled","ModalPortal","CastModal","BigContainer","div","Container","SliderWrapper","CastContainer","props","index","nowTarget","Math","abs","Cover","img","CastName","span","PrevButton","button","NextButton","CastButton","TabCasts","Component","constructor","nextButton","newIndex","state","setState","preButton","handleModalOpen","cast_id","modalOpen","handleModalClose","bind","render","casts_result","length","transform","map","cast","idx","id","profile_path","require","name","substring"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ModalPortal from \"../ModalPortal\";\r\nimport CastModal from \"../CastModal\";\r\n\r\nconst BigContainer = styled.div`\r\n  position: relative;\r\n  margin-right: 40px;\r\n  text-align: center;\r\n  margin-top: 30px;\r\n`;\r\nconst Container = styled.div`\r\n  position: relative;\r\n  height: 290px;\r\n  max-width: 160px;\r\n  margin: 0 auto;\r\n\r\n  /* 원래는 ::after 였는데 after 하니까 버튼영역을 덮어서 이미지를 가려버림 */\r\n  &::before {\r\n    content: \"\";\r\n    display: block;\r\n    width: 100%;\r\n    /* height: 175px; */\r\n    outline: 5px solid #72a9e3;\r\n    position: absolute;\r\n    /* top: 56px; */\r\n    left: 8px;\r\n    /* max-width: 150px; */\r\n    width: 200px;\r\n    height: 216px;\r\n    top: 24px;\r\n  }\r\n`;\r\n\r\nconst SliderWrapper = styled.div`\r\n  height: 100%;\r\n  /* width:100%; */\r\n  display: flex;\r\n  align-items: center;\r\n  position: absolute;\r\n  transition: transform 500ms cubic-bezier(0.413, 0.03, 0.1, 0.4);\r\n`;\r\n\r\nconst CastContainer = styled.div`\r\n  ${(props) =>\r\n    props.index === props.nowTarget\r\n      ? \"opacity:1;transform: scale(1);\"\r\n      : Math.abs(props.nowTarget - props.index) > 1\r\n      ? \"opacity:0;\"\r\n      : \"opacity:0.5; transform: scale(0.7);\"}\r\n  transition: all 0.3s linear;\r\n`;\r\n\r\nconst Cover = styled.img`\r\n  /* width: 150px;\r\n  height: 180px; */\r\n  width: 200px;\r\n  height: 220px;\r\n`;\r\nconst CastName = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  margin-top: 8px;\r\n`;\r\nconst PrevButton = styled.button`\r\n  font-size: 20px;\r\n  position: absolute;\r\n  left: 0;\r\n  top: -22px;\r\n  z-index: 1;\r\n\r\n  &:disabled {\r\n    color: grey;\r\n  }\r\n`;\r\n\r\nconst NextButton = styled.button`\r\n  font-size: 20px;\r\n  position: absolute;\r\n  right: -36px;\r\n  top: -22px;\r\n  z-index: 1;\r\n  &:disabled {\r\n    color: grey;\r\n  }\r\n`;\r\n\r\nconst CastButton = styled.button``;\r\n\r\nexport default class TabCasts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      index: 0,\r\n      modalOpen: false,\r\n      cast_id: null,\r\n    };\r\n    this.nextButton = this.nextButton.bind(this);\r\n    this.preButton = this.preButton.bind(this);\r\n    this.handleModalOpen = this.handleModalOpen.bind(this);\r\n    this.handleModalClose = this.handleModalClose.bind(this);\r\n  }\r\n  nextButton = () => {\r\n    let newIndex = this.state.index + 1;\r\n    this.setState({ index: newIndex });\r\n  };\r\n  preButton = () => {\r\n    let newIndex = this.state.index - 1;\r\n    this.setState({ index: newIndex });\r\n  };\r\n  handleModalOpen = (cast_id) => {\r\n    this.setState({ modalOpen: true, cast_id: cast_id });\r\n  };\r\n  handleModalClose = () => {\r\n    this.setState({ modalOpen: false, cast_id: null });\r\n  };\r\n  render() {\r\n    const { index, modalOpen, cast_id } = this.state;\r\n    const { casts_result } = this.props;\r\n    return (\r\n      <BigContainer>\r\n        {\" \"}\r\n        <PrevButton onClick={() => this.preButton()} disabled={index === 0}>\r\n          Prev\r\n        </PrevButton>\r\n        <NextButton\r\n          onClick={() => this.nextButton()}\r\n          disabled={index === casts_result.length - 1}\r\n        >\r\n          Next\r\n        </NextButton>\r\n        {/* 이미지를 둘러 싸고 있는 사각박스를 위한 컨테이너 */}\r\n        <Container>\r\n          {/* state.index는 Prev, Next 버튼을 누르면 값이 변한다\r\n          그리고 그 변한 index값을 기준으로 이 SliderWrapper가\r\n           X축을 변경해줌으로써 슬라이딩이 가능해진다 */}\r\n          <SliderWrapper\r\n            style={{\r\n              transform: `translateX(-${\r\n                this.state.index * (100 / casts_result.length)\r\n              }%`,\r\n            }}\r\n          >\r\n            {casts_result &&\r\n              casts_result.map((cast, idx) => (\r\n                <CastContainer index={idx} nowTarget={index}>\r\n                  <CastButton\r\n                    // 클릭한 cast.id 값을 state로 업데이트를 시킨다\r\n                    // 그 업데이트 한 값을  CastModal 컴포넌트로 넘긴다\r\n                    // 그 cast_id 값을 모달로 넘겨서 그 cast_id값으로 해당 인물디테일 가져온다\r\n                    onClick={() => this.handleModalOpen(cast.id)}\r\n                    disabled={idx !== index}\r\n                    // idx : map함수의 인수(인덱스) , index : state의 index (현재 포커스 index값)\r\n                  >\r\n                    <Cover\r\n                      src={\r\n                        cast.profile_path\r\n                          ? `https://image.tmdb.org/t/p/w200${cast.profile_path}`\r\n                          : require(\"../../assets/noProfile.png\")\r\n                      }\r\n                    ></Cover>\r\n\r\n                    <CastName>\r\n                      {cast.name.length < 20\r\n                        ? cast.name\r\n                        : `${cast.name.substring(0, 18)}..`}\r\n                    </CastName>\r\n                  </CastButton>\r\n                </CastContainer>\r\n              ))}\r\n          </SliderWrapper>\r\n          {modalOpen && (\r\n            <ModalPortal>\r\n              <CastModal cast_id={cast_id} onClose={this.handleModalClose} />\r\n            </ModalPortal>\r\n          )}\r\n        </Container>\r\n      </BigContainer>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}