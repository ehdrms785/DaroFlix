{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\React\\\\DaroFlix\\\\src\\\\Routes\\\\TV\\\\TVPresenter.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport CategorySection from \"Components/CategorySection\";\nimport Loading from \"Components/Loading\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({\n  popular,\n  topRated,\n  airingToday,\n  error,\n  loading\n}) => loading ? /*#__PURE__*/React.createElement(Loading, {\n  nowPage: \"TV Show\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}) : error ? /*#__PURE__*/React.createElement(Message, {\n  text: error,\n  color: \"red\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}) : /*#__PURE__*/React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Helmet, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"title\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }\n}, \"TV Show | Nomfilx\")), popular && popular.length > 0 && /*#__PURE__*/React.createElement(CategorySection, {\n  title: \"Popular\",\n  link: \"/show/viewMore/popular\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }\n}, popular.map(show => /*#__PURE__*/React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  imageUrl: show.poster_path,\n  title: show.original_name,\n  rating: show.vote_average,\n  year: show.first_air_date.substring(0, 4),\n  isMovie: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }\n}))), topRated && topRated.length > 0 && /*#__PURE__*/React.createElement(CategorySection, {\n  title: \"TopRated\",\n  link: \"/show/viewMore/topRated\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }\n}, topRated.map(show => /*#__PURE__*/React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  imageUrl: show.poster_path,\n  title: show.original_name,\n  rating: show.vote_average,\n  year: show.first_air_date.substring(0, 4),\n  isMovie: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }\n}))), airingToday && airingToday.length > 0 && /*#__PURE__*/React.createElement(CategorySection, {\n  title: \"Airing Today\",\n  link: \"/show/viewMore/airingToday\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }\n}, airingToday.map(show => /*#__PURE__*/React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  imageUrl: show.poster_path,\n  title: show.original_name,\n  rating: show.vote_average,\n  year: show.first_air_date.substring(0, 4),\n  isMovie: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }\n}))), error && /*#__PURE__*/React.createElement(Message, {\n  color: \"#e74c3c\",\n  text: error,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 17\n  }\n}));\n\nTVPresenter.propTypes = {\n  popular: PropTypes.array,\n  topRated: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\nexport default TVPresenter;","map":{"version":3,"sources":["D:/Documents/React/DaroFlix/src/Routes/TV/TVPresenter.js"],"names":["React","PropTypes","styled","Helmet","CategorySection","Loading","Message","Poster","Container","div","TVPresenter","popular","topRated","airingToday","error","loading","length","map","show","id","poster_path","original_name","vote_average","first_air_date","substring","propTypes","array","string","bool","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport CategorySection from \"Components/CategorySection\";\r\nimport Loading from \"Components/Loading\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ popular, topRated, airingToday, error, loading }) =>\r\n  loading ? (\r\n    <Loading nowPage=\"TV Show\" />\r\n  ) : error ? (\r\n    <Message text={error} color=\"red\" />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>TV Show | Nomfilx</title>\r\n      </Helmet>\r\n      {popular && popular.length > 0 && (\r\n        <CategorySection title=\"Popular\" link=\"/show/viewMore/popular\">\r\n          {popular.map((show) => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              imageUrl={show.poster_path}\r\n              title={show.original_name}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date.substring(0, 4)}\r\n              isMovie={false}\r\n            />\r\n          ))}\r\n        </CategorySection>\r\n      )}\r\n      {topRated && topRated.length > 0 && (\r\n        <CategorySection title=\"TopRated\" link=\"/show/viewMore/topRated\">\r\n          {topRated.map((show) => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              imageUrl={show.poster_path}\r\n              title={show.original_name}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date.substring(0, 4)}\r\n              isMovie={false}\r\n            />\r\n          ))}\r\n        </CategorySection>\r\n      )}\r\n\r\n      {airingToday && airingToday.length > 0 && (\r\n        <CategorySection title=\"Airing Today\" link=\"/show/viewMore/airingToday\">\r\n          {airingToday.map((show) => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              imageUrl={show.poster_path}\r\n              title={show.original_name}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date.substring(0, 4)}\r\n              isMovie={false}\r\n            />\r\n          ))}\r\n        </CategorySection>\r\n      )}\r\n\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>\r\n  );\r\n\r\nTVPresenter.propTypes = {\r\n  popular: PropTypes.array,\r\n  topRated: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TVPresenter;\r\n"]},"metadata":{},"sourceType":"module"}