{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\React\\\\DaroFlix\\\\src\\\\Components\\\\CastModal.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { movieApi } from \"../api\";\nimport Loading from \"./Loading\"; // 모달 배경 클릭 안되게 설정하는 컨테이너\n\nconst MyModalContainer = styled.div`\n  z-index: 2;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`; // 실제 모달 컨텐트 부분\n\nconst Content = styled.div`\n  width: 1000px;\n  height: 500px;\n  background: grey;\n  z-index: 3;\n  overflow-y: auto;\n  display: block;\n  margin: auto;\n`;\nconst CloseButton = styled.button`\n  color: white;\n  font-size: 80px;\n  position: absolute;\n  right: 165px;\n  top: 52px;\n  transform: rotate(45deg);\n`; // 프로필 커버사진과 설명을 세로형식으로 나누기 위한 부분\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n`;\nconst ProfileCover = styled.img`\n  width: 300px;\n  min-width: 300px;\n  height: 90%;\n  margin: auto 50px;\n`; // 자세한 설명 부분\n\nconst ProfileDetail = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  height: 80%;\n  margin-right: 100px;\n  margin: auto 30px;\n`;\nconst Name = styled.h1`\n  font-size: 31px;\n  margin-bottom: 20px;\n`;\nconst Title = styled.h1`\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\nconst Context = styled.h2`\n  font-size: 14px;\n  margin-bottom: 20px;\n`;\nconst Biography = styled.h3`\n  font-size: 13px;\n  line-height: 1.5;\n  overflow-y: ${props => props.text_length > 900 ? \"scroll\" : \"unset\"};\n  /* overflow 될 사이즈가 되면 y축 scroll만 생성 ! 아니면 unset  */\n  margin: 5px 0;\n`; // { casts_result, onClose }\n\nclass CastModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      error: null,\n      cast_detail: null\n    };\n  }\n\n  componentDidMount() {\n    // console.log(\"CastModal Did Mount !\");\n    this.getCastDetail();\n  }\n\n  async getCastDetail() {\n    const {\n      cast_id\n    } = this.props;\n    console.log(cast_id, typeof cast_id);\n\n    if (cast_id) {\n      let cast_detail = null;\n\n      try {\n        ({\n          data: cast_detail\n        } = await movieApi.getCastDetail(cast_id));\n      } catch {\n        this.setState({\n          error: \"Can not find cast's data from api !\"\n        });\n      } finally {\n        this.setState({\n          loading: false,\n          cast_detail\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      onClose\n    } = this.props;\n    const {\n      loading,\n      error,\n      cast_detail\n    } = this.state;\n    return loading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(MyModalContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CloseButton, {\n      onClick: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(ProfileContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ProfileCover, {\n      src: cast_detail.profile_path ? `https://image.tmdb.org/t/p/w300${cast_detail.profile_path}` : require(\"../assets/noProfile.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ProfileDetail, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Name, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, cast_detail.name), /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, \"Birthday\"), /*#__PURE__*/React.createElement(Context, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, cast_detail.birthday), /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, \"Birth_Place\"), /*#__PURE__*/React.createElement(Context, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, cast_detail.place_of_birth), cast_detail.deathday ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, \"Deathday\"), /*#__PURE__*/React.createElement(Context, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, \" \", cast_detail.deathday)) : null, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, \"Biography\"), /*#__PURE__*/React.createElement(Biography, {\n      text_length: cast_detail.biography.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, cast_detail.biography)))));\n  }\n\n}\n\nexport default CastModal;","map":{"version":3,"sources":["D:/Documents/React/DaroFlix/src/Components/CastModal.js"],"names":["React","styled","movieApi","Loading","MyModalContainer","div","Content","CloseButton","button","ProfileContainer","ProfileCover","img","ProfileDetail","Name","h1","Title","Context","h2","Biography","h3","props","text_length","CastModal","Component","state","loading","error","cast_detail","componentDidMount","getCastDetail","cast_id","console","log","data","setState","render","onClose","profile_path","require","name","birthday","place_of_birth","deathday","biography","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { movieApi } from \"../api\";\r\nimport Loading from \"./Loading\";\r\n\r\n// 모달 배경 클릭 안되게 설정하는 컨테이너\r\nconst MyModalContainer = styled.div`\r\n  z-index: 2;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  position: fixed;\r\n  height: 100%;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n// 실제 모달 컨텐트 부분\r\nconst Content = styled.div`\r\n  width: 1000px;\r\n  height: 500px;\r\n  background: grey;\r\n  z-index: 3;\r\n  overflow-y: auto;\r\n  display: block;\r\n  margin: auto;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  color: white;\r\n  font-size: 80px;\r\n  position: absolute;\r\n  right: 165px;\r\n  top: 52px;\r\n  transform: rotate(45deg);\r\n`;\r\n\r\n// 프로필 커버사진과 설명을 세로형식으로 나누기 위한 부분\r\nconst ProfileContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst ProfileCover = styled.img`\r\n  width: 300px;\r\n  min-width: 300px;\r\n  height: 90%;\r\n  margin: auto 50px;\r\n`;\r\n\r\n// 자세한 설명 부분\r\nconst ProfileDetail = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  height: 80%;\r\n  margin-right: 100px;\r\n  margin: auto 30px;\r\n`;\r\n\r\nconst Name = styled.h1`\r\n  font-size: 31px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 20px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Context = styled.h2`\r\n  font-size: 14px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Biography = styled.h3`\r\n  font-size: 13px;\r\n  line-height: 1.5;\r\n  overflow-y: ${(props) => (props.text_length > 900 ? \"scroll\" : \"unset\")};\r\n  /* overflow 될 사이즈가 되면 y축 scroll만 생성 ! 아니면 unset  */\r\n  margin: 5px 0;\r\n`;\r\n// { casts_result, onClose }\r\nclass CastModal extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    error: null,\r\n    cast_detail: null,\r\n  };\r\n  componentDidMount() {\r\n    // console.log(\"CastModal Did Mount !\");\r\n    this.getCastDetail();\r\n  }\r\n  async getCastDetail() {\r\n    const { cast_id } = this.props;\r\n    console.log(cast_id, typeof cast_id);\r\n    if (cast_id) {\r\n      let cast_detail = null;\r\n      try {\r\n        ({ data: cast_detail } = await movieApi.getCastDetail(cast_id));\r\n      } catch {\r\n        this.setState({ error: \"Can not find cast's data from api !\" });\r\n      } finally {\r\n        this.setState({ loading: false, cast_detail });\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const { onClose } = this.props;\r\n    const { loading, error, cast_detail } = this.state;\r\n\r\n    return loading ? (\r\n      <Loading />\r\n    ) : (\r\n      <MyModalContainer>\r\n        <Content>\r\n          <CloseButton onClick={onClose}>+</CloseButton>\r\n          <ProfileContainer>\r\n            <ProfileCover\r\n              src={\r\n                cast_detail.profile_path\r\n                  ? `https://image.tmdb.org/t/p/w300${cast_detail.profile_path}`\r\n                  : require(\"../assets/noProfile.png\")\r\n              }\r\n            />\r\n\r\n            <ProfileDetail>\r\n              <Name>{cast_detail.name}</Name>\r\n              <Title>Birthday</Title>\r\n              <Context>{cast_detail.birthday}</Context>\r\n              <Title>Birth_Place</Title>\r\n              <Context>{cast_detail.place_of_birth}</Context>\r\n\r\n              {cast_detail.deathday ? (\r\n                <>\r\n                  <Title>Deathday</Title>\r\n                  <Context> {cast_detail.deathday}</Context>\r\n                </>\r\n              ) : null}\r\n              <Title>Biography</Title>\r\n              <Biography text_length={cast_detail.biography.length}>\r\n                {cast_detail.biography}\r\n              </Biography>\r\n            </ProfileDetail>\r\n          </ProfileContainer>\r\n        </Content>\r\n      </MyModalContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CastModal;\r\n"]},"metadata":{},"sourceType":"module"}