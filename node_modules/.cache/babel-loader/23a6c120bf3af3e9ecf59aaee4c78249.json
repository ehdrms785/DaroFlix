{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Documents\\\\React\\\\DaroFlix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _toConsumableArray from\"D:\\\\Documents\\\\React\\\\DaroFlix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"D:\\\\Documents\\\\React\\\\DaroFlix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"D:\\\\Documents\\\\React\\\\DaroFlix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Documents\\\\React\\\\DaroFlix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"D:\\\\Documents\\\\React\\\\DaroFlix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"D:\\\\Documents\\\\React\\\\DaroFlix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from\"react\";import ViewMorePresenter from\"./ViewMorePresenter\";import{movieApi,tvApi}from\"../../api\";var _default=/*#__PURE__*/function(_React$Component){_inherits(_default,_React$Component);var _super=_createSuper(_default);function _default(){var _this;_classCallCheck(this,_default);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={results:null,loading:true,error:null,page:3,scroll:false};return _this;}_createClass(_default,[{key:\"getData\",value:function(){var _getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this$props$match$par,type,subject,query,movies1,movies2,_yield$movieApi$upCom,_yield$movieApi$upCom2,_yield$movieApi$nowPl,_yield$movieApi$nowPl2,_yield$movieApi$popul,_yield$movieApi$popul2,_yield$movieApi$searc,_yield$movieApi$searc2,movies,shows1,shows2,_yield$tvApi$popular,_yield$tvApi$popular2,_yield$tvApi$topRated,_yield$tvApi$topRated2,_yield$tvApi$airingTo,_yield$tvApi$airingTo2,shows;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this$props$match$par=this.props.match.params,type=_this$props$match$par.type,subject=_this$props$match$par.subject,query=_this$props$match$par.query;// console.log(`type:${type} , subject:${subject}, query:${query}`);\n_context.prev=1;if(!(type===\"movie\")){_context.next=51;break;}movies1=[];movies2=[];if(!(subject===\"upComing\")){_context.next=16;break;}_context.next=8;return movieApi.upComing(1);case 8:_yield$movieApi$upCom=_context.sent;movies1=_yield$movieApi$upCom.data.results;_context.next=12;return movieApi.upComing(2);case 12:_yield$movieApi$upCom2=_context.sent;movies2=_yield$movieApi$upCom2.data.results;_context.next=47;break;case 16:if(!(subject===\"nowPlaying\")){_context.next=27;break;}_context.next=19;return movieApi.nowPlaying(1);case 19:_yield$movieApi$nowPl=_context.sent;movies1=_yield$movieApi$nowPl.data.results;_context.next=23;return movieApi.nowPlaying(2);case 23:_yield$movieApi$nowPl2=_context.sent;movies2=_yield$movieApi$nowPl2.data.results;_context.next=47;break;case 27:if(!(subject===\"popular\")){_context.next=38;break;}_context.next=30;return movieApi.popular(1);case 30:_yield$movieApi$popul=_context.sent;movies1=_yield$movieApi$popul.data.results;_context.next=34;return movieApi.popular(2);case 34:_yield$movieApi$popul2=_context.sent;movies2=_yield$movieApi$popul2.data.results;_context.next=47;break;case 38:if(!(subject===\"search\")){_context.next=47;break;}_context.next=41;return movieApi.search(query,1);case 41:_yield$movieApi$searc=_context.sent;movies1=_yield$movieApi$searc.data.results;_context.next=45;return movieApi.search(query,2);case 45:_yield$movieApi$searc2=_context.sent;movies2=_yield$movieApi$searc2.data.results;case 47:movies=[].concat(_toConsumableArray(movies1),_toConsumableArray(movies2));this.setState({results:movies});_context.next=87;break;case 51:if(!(type===\"show\")){_context.next=87;break;}shows1=[];shows2=[];if(!(subject===\"popular\")){_context.next=65;break;}_context.next=57;return tvApi.popular(1);case 57:_yield$tvApi$popular=_context.sent;shows1=_yield$tvApi$popular.data.results;_context.next=61;return tvApi.popular(2);case 61:_yield$tvApi$popular2=_context.sent;shows2=_yield$tvApi$popular2.data.results;_context.next=85;break;case 65:if(!(subject===\"topRated\")){_context.next=76;break;}_context.next=68;return tvApi.topRated(1);case 68:_yield$tvApi$topRated=_context.sent;shows1=_yield$tvApi$topRated.data.results;_context.next=72;return tvApi.topRated(2);case 72:_yield$tvApi$topRated2=_context.sent;shows2=_yield$tvApi$topRated2.data.results;_context.next=85;break;case 76:if(!(subject===\"airingToday\")){_context.next=85;break;}_context.next=79;return tvApi.airingToday(1);case 79:_yield$tvApi$airingTo=_context.sent;shows1=_yield$tvApi$airingTo.data.results;_context.next=83;return tvApi.airingToday(2);case 83:_yield$tvApi$airingTo2=_context.sent;shows2=_yield$tvApi$airingTo2.data.results;case 85:shows=[].concat(_toConsumableArray(shows1),_toConsumableArray(shows2));this.setState({results:shows});case 87:_context.next=92;break;case 89:_context.prev=89;_context.t0=_context[\"catch\"](1);this.setState({error:\"Can not find View More Data from API\"});case 92:_context.prev=92;this.setState({loading:false});return _context.finish(92);case 95:case\"end\":return _context.stop();}}},_callee,this,[[1,89,92,95]]);}));function getData(){return _getData.apply(this,arguments);}return getData;}()},{key:\"getDataMore\",value:function(){var _getDataMore=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(page){var _this$props$match$par2,type,subject,query,_this$state,results,scroll,movies1,_yield$movieApi$upCom3,_yield$movieApi$nowPl3,_yield$movieApi$popul3,_yield$movieApi$searc3,movies,shows1,_yield$tvApi$popular3,_yield$tvApi$topRated3,_yield$tvApi$airingTo3,_movies;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_this$props$match$par2=this.props.match.params,type=_this$props$match$par2.type,subject=_this$props$match$par2.subject,query=_this$props$match$par2.query;_this$state=this.state,results=_this$state.results,scroll=_this$state.scroll;// dconsole.log(`${type} and ${subject} and ${query}`);\n_context2.prev=2;if(!scroll){_context2.next=49;break;}if(!(type===\"movie\")){_context2.next=30;break;}movies1=[];if(!(subject===\"upComing\")){_context2.next=11;break;}_context2.next=9;return movieApi.upComing(page);case 9:_yield$movieApi$upCom3=_context2.sent;movies1=_yield$movieApi$upCom3.data.results;case 11:if(!(subject===\"nowPlaying\")){_context2.next=16;break;}_context2.next=14;return movieApi.nowPlaying(page);case 14:_yield$movieApi$nowPl3=_context2.sent;movies1=_yield$movieApi$nowPl3.data.results;case 16:if(!(subject===\"popular\")){_context2.next=21;break;}_context2.next=19;return movieApi.popular(page);case 19:_yield$movieApi$popul3=_context2.sent;movies1=_yield$movieApi$popul3.data.results;case 21:if(!(subject===\"search\")){_context2.next=26;break;}_context2.next=24;return movieApi.search(query,page);case 24:_yield$movieApi$searc3=_context2.sent;movies1=_yield$movieApi$searc3.data.results;case 26:movies=[].concat(_toConsumableArray(results),_toConsumableArray(movies1));// console.log(`${type} and ${subject} and ${page}`);\n// console.log(movies1);\n/*  만약 movies1.length가 0이면 (더이상 가져올 데이터가 없으면)\r\n            페이지업그레이드 안하고 스테이트 업데이트도 안하고 그대로 둔다 */if(movies1.length>0){this.setState(function(current){return{results:movies,scroll:false,page:current.page+1};});}_context2.next=49;break;case 30:if(!(type===\"show\")){_context2.next=49;break;}shows1=[];if(!(subject===\"popular\")){_context2.next=37;break;}_context2.next=35;return tvApi.popular(page);case 35:_yield$tvApi$popular3=_context2.sent;shows1=_yield$tvApi$popular3.data.results;case 37:if(!(subject===\"topRated\")){_context2.next=42;break;}_context2.next=40;return tvApi.topRated(page);case 40:_yield$tvApi$topRated3=_context2.sent;shows1=_yield$tvApi$topRated3.data.results;case 42:if(!(subject===\"airingToday\")){_context2.next=47;break;}_context2.next=45;return tvApi.airingToday(page);case 45:_yield$tvApi$airingTo3=_context2.sent;shows1=_yield$tvApi$airingTo3.data.results;case 47:_movies=[].concat(_toConsumableArray(results),_toConsumableArray(shows1));this.setState(function(current){return{results:_movies,scroll:false,page:current.page+1};});case 49:_context2.next=54;break;case 51:_context2.prev=51;_context2.t0=_context2[\"catch\"](2);this.setState({error:\"Can not find Data from APIzz\"});case 54:_context2.prev=54;this.setState({loading:false});return _context2.finish(54);case 57:case\"end\":return _context2.stop();}}},_callee2,this,[[2,51,54,57]]);}));function getDataMore(_x){return _getDataMore.apply(this,arguments);}return getDataMore;}()},{key:\"infiniteScroll\",value:function infiniteScroll(e){var _document$documentEle=document.documentElement,clientHeight=_document$documentEle.clientHeight,scrollHeight=_document$documentEle.scrollHeight;var _this$state2=this.state,results=_this$state2.results,scroll=_this$state2.scroll;// if (results && scrollTop + clientHeight >= scrollHeight - 600) {\nif(results&&window.scrollY+clientHeight>=scrollHeight-600){// ㄴ window.scrollY 를 사용하면 모바일에서 작동이 되더라 + IE9 이하에서는 pageOffset을 써 줘야한다\n// ㄴ state의 results 값을 체크해주지 않으면\n// ㄴ 스크롤이 내려가있는 상태에서 새로고침시 getData 값을 가져오기 이전에\n// ㄴ getDataMore를 실행해버린다 (그러면서 오류가 발생한다)\n// ㄴ\nif(scroll===false){// ㄴ 이렇게 걸러주지 않으면 스크롤이 내려가서 추가로드할때 로드가 완료될때까지 (false로 돌아올때까지)\n// ㄴ 계속 this.setState를 실행시켜서 필요없는 렌더링을 몇번이고 한다\nthis.setState({scroll:true});this.getDataMore(this.state.page);}}}},{key:\"componentDidMount\",value:function componentDidMount(){this.getData();window.addEventListener(\"scroll\",this.infiniteScroll.bind(this));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){}},{key:\"render\",value:function render(){var _this$props$match$par3=this.props.match.params,type=_this$props$match$par3.type,subject=_this$props$match$par3.subject;var _this$state3=this.state,results=_this$state3.results,loading=_this$state3.loading,error=_this$state3.error;//console.log(results);\nreturn/*#__PURE__*/React.createElement(ViewMorePresenter,{results:results,loading:loading,error:error,isMovie:type===\"movie\",subject:subject});}}]);return _default;}(React.Component);export{_default as default};","map":{"version":3,"sources":["D:/Documents/React/DaroFlix/src/Routes/ViewMore/ViewMoreContainer.js"],"names":["React","ViewMorePresenter","movieApi","tvApi","state","results","loading","error","page","scroll","props","match","params","type","subject","query","movies1","movies2","upComing","data","nowPlaying","popular","search","movies","setState","shows1","shows2","topRated","airingToday","shows","length","current","e","document","documentElement","clientHeight","scrollHeight","window","scrollY","getDataMore","getData","addEventListener","infiniteScroll","bind","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ViewMorePresenter from \"./ViewMorePresenter\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    results: null,\r\n    loading: true,\r\n    error: null,\r\n    page: 3,\r\n    scroll: false,\r\n  };\r\n\r\n  async getData() {\r\n    const {\r\n      match: {\r\n        params: { type, subject, query },\r\n      },\r\n    } = this.props;\r\n    // console.log(`type:${type} , subject:${subject}, query:${query}`);\r\n\r\n    try {\r\n      if (type === \"movie\") {\r\n        let movies1 = [];\r\n        let movies2 = [];\r\n        if (subject === \"upComing\") {\r\n          ({\r\n            data: { results: movies1 },\r\n          } = await movieApi.upComing(1));\r\n          ({\r\n            data: { results: movies2 },\r\n          } = await movieApi.upComing(2));\r\n        } else if (subject === \"nowPlaying\") {\r\n          ({\r\n            data: { results: movies1 },\r\n          } = await movieApi.nowPlaying(1));\r\n          ({\r\n            data: { results: movies2 },\r\n          } = await movieApi.nowPlaying(2));\r\n        } else if (subject === \"popular\") {\r\n          ({\r\n            data: { results: movies1 },\r\n          } = await movieApi.popular(1));\r\n          ({\r\n            data: { results: movies2 },\r\n          } = await movieApi.popular(2));\r\n        } else if (subject === \"search\") {\r\n          ({\r\n            data: { results: movies1 },\r\n          } = await movieApi.search(query, 1));\r\n          ({\r\n            data: { results: movies2 },\r\n          } = await movieApi.search(query, 2));\r\n        }\r\n        const movies = [...movies1, ...movies2];\r\n        this.setState({\r\n          results: movies,\r\n        });\r\n      } else if (type === \"show\") {\r\n        let shows1 = [];\r\n        let shows2 = [];\r\n        if (subject === \"popular\") {\r\n          ({\r\n            data: { results: shows1 },\r\n          } = await tvApi.popular(1));\r\n          ({\r\n            data: { results: shows2 },\r\n          } = await tvApi.popular(2));\r\n        } else if (subject === \"topRated\") {\r\n          ({\r\n            data: { results: shows1 },\r\n          } = await tvApi.topRated(1));\r\n          ({\r\n            data: { results: shows2 },\r\n          } = await tvApi.topRated(2));\r\n        } else if (subject === \"airingToday\") {\r\n          ({\r\n            data: { results: shows1 },\r\n          } = await tvApi.airingToday(1));\r\n          ({\r\n            data: { results: shows2 },\r\n          } = await tvApi.airingToday(2));\r\n        }\r\n        const shows = [...shows1, ...shows2];\r\n        this.setState({\r\n          results: shows,\r\n        });\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can not find View More Data from API\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n  async getDataMore(page) {\r\n    const {\r\n      match: {\r\n        params: { type, subject, query },\r\n      },\r\n    } = this.props;\r\n    const { results, scroll } = this.state;\r\n    // dconsole.log(`${type} and ${subject} and ${query}`);\r\n    try {\r\n      if (scroll) {\r\n        if (type === \"movie\") {\r\n          let movies1 = [];\r\n\r\n          if (subject === \"upComing\") {\r\n            ({\r\n              data: { results: movies1 },\r\n            } = await movieApi.upComing(page));\r\n          }\r\n          if (subject === \"nowPlaying\") {\r\n            ({\r\n              data: { results: movies1 },\r\n            } = await movieApi.nowPlaying(page));\r\n          }\r\n          if (subject === \"popular\") {\r\n            ({\r\n              data: { results: movies1 },\r\n            } = await movieApi.popular(page));\r\n          }\r\n          if (subject === \"search\") {\r\n            ({\r\n              data: { results: movies1 },\r\n            } = await movieApi.search(query, page));\r\n          }\r\n          const movies = [...results, ...movies1];\r\n          // console.log(`${type} and ${subject} and ${page}`);\r\n          // console.log(movies1);\r\n\r\n          /*  만약 movies1.length가 0이면 (더이상 가져올 데이터가 없으면)\r\n            페이지업그레이드 안하고 스테이트 업데이트도 안하고 그대로 둔다 */\r\n          if (movies1.length > 0) {\r\n            this.setState((current) => ({\r\n              results: movies,\r\n              scroll: false,\r\n              page: current.page + 1,\r\n            }));\r\n          }\r\n        } else if (type === \"show\") {\r\n          let shows1 = [];\r\n          if (subject === \"popular\") {\r\n            ({\r\n              data: { results: shows1 },\r\n            } = await tvApi.popular(page));\r\n          }\r\n          if (subject === \"topRated\") {\r\n            ({\r\n              data: { results: shows1 },\r\n            } = await tvApi.topRated(page));\r\n          }\r\n          if (subject === \"airingToday\") {\r\n            ({\r\n              data: { results: shows1 },\r\n            } = await tvApi.airingToday(page));\r\n          }\r\n          const movies = [...results, ...shows1];\r\n\r\n          this.setState((current) => ({\r\n            results: movies,\r\n            scroll: false,\r\n            page: current.page + 1,\r\n          }));\r\n        }\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can not find Data from APIzz\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n  infiniteScroll(e) {\r\n    const { clientHeight, scrollHeight } = document.documentElement;\r\n\r\n    const { results, scroll } = this.state;\r\n    // if (results && scrollTop + clientHeight >= scrollHeight - 600) {\r\n    if (results && window.scrollY + clientHeight >= scrollHeight - 600) {\r\n      // ㄴ window.scrollY 를 사용하면 모바일에서 작동이 되더라 + IE9 이하에서는 pageOffset을 써 줘야한다\r\n      // ㄴ state의 results 값을 체크해주지 않으면\r\n      // ㄴ 스크롤이 내려가있는 상태에서 새로고침시 getData 값을 가져오기 이전에\r\n      // ㄴ getDataMore를 실행해버린다 (그러면서 오류가 발생한다)\r\n      // ㄴ\r\n      if (scroll === false) {\r\n        // ㄴ 이렇게 걸러주지 않으면 스크롤이 내려가서 추가로드할때 로드가 완료될때까지 (false로 돌아올때까지)\r\n        // ㄴ 계속 this.setState를 실행시켜서 필요없는 렌더링을 몇번이고 한다\r\n        this.setState({ scroll: true });\r\n        this.getDataMore(this.state.page);\r\n      }\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getData();\r\n    window.addEventListener(\"scroll\", this.infiniteScroll.bind(this));\r\n  }\r\n  componentDidUpdate() {}\r\n  render() {\r\n    const {\r\n      match: {\r\n        params: { type, subject },\r\n      },\r\n    } = this.props;\r\n    const { results, loading, error } = this.state;\r\n    //console.log(results);\r\n    return (\r\n      <ViewMorePresenter\r\n        results={results}\r\n        loading={loading}\r\n        error={error}\r\n        isMovie={type === \"movie\"}\r\n        subject={subject}\r\n      />\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}