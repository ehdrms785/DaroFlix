{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Documents\\\\React\\\\DaroFlix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Documents\\\\React\\\\DaroFlix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"D:\\\\Documents\\\\React\\\\DaroFlix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Documents\\\\React\\\\DaroFlix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"D:\\\\Documents\\\\React\\\\DaroFlix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"D:\\\\Documents\\\\React\\\\DaroFlix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _taggedTemplateLiteral from\"D:\\\\Documents\\\\React\\\\DaroFlix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  display: block;\\n  width: 80%;\\n  background-color: rgba(30, 30, 30, 0.8);\\n  height: 100%;\\n  /* max-height: 400px; */\\n  max-height: 430px;\\n  margin-bottom: 20px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{Component}from\"react\";import styled from\"styled-components\";import DetailTabHeader from\"./DetailTabHeader\";import TabYoutube from\"./TabYoutube\";import TabSimilar from\"./TabSimilar\";import TabSeason from\"./TabSeason\";import TabCasts from\"./TabCasts\";import{movieApi}from\"../../api\";import Loading from\"../Loading\";var Container=styled.div(_templateObject());var DetailTabContainer=/*#__PURE__*/function(_Component){_inherits(DetailTabContainer,_Component);var _super=_createSuper(DetailTabContainer);function DetailTabContainer(){var _this;_classCallCheck(this,DetailTabContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={selectedButton:null,seasons:null,results:null,loading:true};_this.handleClick=function(selectedButton){_this.setState({selectedButton:selectedButton});};return _this;}_createClass(DetailTabContainer,[{key:\"getRecommendsMovies\",value:function(){var _getRecommendsMovies=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var movie_id,recommends_result,_yield$movieApi$getSi;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:movie_id=this.props.result.id;recommends_result=null;_context.prev=2;_context.next=5;return movieApi.getSimilarMovies(movie_id,1);case 5:_yield$movieApi$getSi=_context.sent;recommends_result=_yield$movieApi$getSi.data.results;_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](2);this.setState({error:\"Can not find Similar Data from API\"});case 12:_context.prev=12;this.setState({loading:false,recommends_result:recommends_result});return _context.finish(12);case 15:case\"end\":return _context.stop();}}},_callee,this,[[2,9,12,15]]);}));function getRecommendsMovies(){return _getRecommendsMovies.apply(this,arguments);}return getRecommendsMovies;}()},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var prev_movie_id=prevProps.result.id;var now_movie_id=this.props.result.id;if(prev_movie_id!==now_movie_id){this.getRecommendsMovies();this.buttonCheckAndUpdate();}}},{key:\"buttonCheckAndUpdate\",value:function buttonCheckAndUpdate(){var selectedButton=null;var _this$props=this.props,results=_this$props.result.videos.results,casts_result=_this$props.casts_result,recommends_result=_this$props.recommends_result,isMovie=_this$props.isMovie;var seasons=null;if(isMovie){}else{seasons=this.props.result.seasons;}// 유튜브 비디오 체크 & 버튼 활성화\nif(results&&results.length>0){selectedButton=\"Youtube\";// 캐스팅 체크 &  버튼 활성화\n}else if(casts_result&&casts_result.length>0){selectedButton=\"Casts\";}// 추천영화(비슷한영화[Movie Only])체크 & 버튼 활성화\nelse if(recommends_result&&recommends_result.length>0){selectedButton=\"Recommends\";}// 시즌(TV Only) & 버튼 활성화\nelse if(seasons&&seasons.length>0){selectedButton=\"Seasons\";}this.setState({selectedButton:selectedButton,loading:false});}},{key:\"componentDidMount\",value:function componentDidMount(){this.getRecommendsMovies();this.buttonCheckAndUpdate();}},{key:\"render\",value:function render(){var _this$state=this.state,selectedButton=_this$state.selectedButton,loading=_this$state.loading;// 최적화를 위해서 한 번 시도\n// 로딩이 false 이면 굳이 밑에 것들을 가져와서 체크 할 필요가 없지 않을까?\n// 그럴 필요는 없다는 결론 그래서 loading === false로 걸러주기로함\nif(loading===false){var _this$props2=this.props,results=_this$props2.result.videos.results,casts_result=_this$props2.casts_result,recommends_result=_this$props2.recommends_result,movie_id=_this$props2.result.id,isMovie=_this$props2.isMovie;// 밑에서 isSeasons를 체크하기 위해서 미리 초기화\nvar seasons=null;if(!isMovie){seasons=this.props.result.seasons;}var isVideos=results&&results.length>0;var isCasts=casts_result&&casts_result.length>0;// const isCompanies = production_companies && production_companies.length > 0;\nvar isRecommends=recommends_result&&recommends_result.length>0;var isSeasons=seasons&&seasons.length>0;/* If selectedButton is null, wait til next rendering  */return loading?/*#__PURE__*/React.createElement(Loading,null):selectedButton?/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(DetailTabHeader,{isVideos:isVideos,isCasts:isCasts,isRecommends:isRecommends,isSeasons:isSeasons,handleClick:this.handleClick,selectedButton:selectedButton}),selectedButton===\"Youtube\"&&isVideos&&results.length>0&&/*#__PURE__*/React.createElement(TabYoutube,{youtubeKey:results[0].key}),selectedButton===\"Casts\"&&casts_result.length>0&&/*#__PURE__*/React.createElement(TabCasts,{casts_result:casts_result}),selectedButton===\"Recommends\"&&recommends_result.length>0&&/*#__PURE__*/React.createElement(TabSimilar,{recommends_result:recommends_result,movie_id:movie_id}),selectedButton===\"Seasons\"&&seasons.length>0&&/*#__PURE__*/React.createElement(TabSeason,{seasons:seasons})):null;}// == if(loading === true) 일 때는 굳이 아무것도 렌더링 시키지 않는다\n// 굳이 필요가 없기 때문 (최적화용)\nelse{return null;}}}]);return DetailTabContainer;}(Component);export{DetailTabContainer as default};","map":{"version":3,"sources":["D:/Documents/React/DaroFlix/src/Components/DetailTab/DetailTabContainer.js"],"names":["React","Component","styled","DetailTabHeader","TabYoutube","TabSimilar","TabSeason","TabCasts","movieApi","Loading","Container","div","DetailTabContainer","state","selectedButton","seasons","results","loading","handleClick","setState","movie_id","props","result","id","recommends_result","getSimilarMovies","data","error","prevProps","prev_movie_id","now_movie_id","getRecommendsMovies","buttonCheckAndUpdate","videos","casts_result","isMovie","length","isVideos","isCasts","isRecommends","isSeasons","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport DetailTabHeader from \"./DetailTabHeader\";\r\nimport TabYoutube from \"./TabYoutube\";\r\nimport TabSimilar from \"./TabSimilar\";\r\nimport TabSeason from \"./TabSeason\";\r\nimport TabCasts from \"./TabCasts\";\r\nimport { movieApi } from \"../../api\";\r\nimport Loading from \"../Loading\";\r\nconst Container = styled.div`\r\n  display: block;\r\n  width: 80%;\r\n  background-color: rgba(30, 30, 30, 0.8);\r\n  height: 100%;\r\n  /* max-height: 400px; */\r\n  max-height: 430px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport default class DetailTabContainer extends Component {\r\n  state = {\r\n    selectedButton: null,\r\n    seasons: null,\r\n    results: null,\r\n    loading: true,\r\n  };\r\n  async getRecommendsMovies() {\r\n    const {\r\n      result: { id: movie_id },\r\n    } = this.props;\r\n\r\n    let recommends_result = null;\r\n    try {\r\n      ({\r\n        data: { results: recommends_result },\r\n      } = await movieApi.getSimilarMovies(movie_id, 1));\r\n    } catch (e) {\r\n      this.setState({ error: \"Can not find Similar Data from API\" });\r\n    } finally {\r\n      this.setState({ loading: false, recommends_result });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      result: { id: prev_movie_id },\r\n    } = prevProps;\r\n    const {\r\n      result: { id: now_movie_id },\r\n    } = this.props;\r\n\r\n    if (prev_movie_id !== now_movie_id) {\r\n      this.getRecommendsMovies();\r\n      this.buttonCheckAndUpdate();\r\n    }\r\n  }\r\n  buttonCheckAndUpdate() {\r\n    let selectedButton = null;\r\n    const {\r\n      result: {\r\n        videos: { results },\r\n      },\r\n      casts_result,\r\n      recommends_result,\r\n      isMovie,\r\n    } = this.props;\r\n    let seasons = null;\r\n    if (isMovie) {\r\n    } else {\r\n      ({\r\n        result: { seasons: seasons },\r\n      } = this.props);\r\n    }\r\n\r\n    // 유튜브 비디오 체크 & 버튼 활성화\r\n    if (results && results.length > 0) {\r\n      selectedButton = \"Youtube\";\r\n      // 캐스팅 체크 &  버튼 활성화\r\n    } else if (casts_result && casts_result.length > 0) {\r\n      selectedButton = \"Casts\";\r\n    }\r\n    // 추천영화(비슷한영화[Movie Only])체크 & 버튼 활성화\r\n    else if (recommends_result && recommends_result.length > 0) {\r\n      selectedButton = \"Recommends\";\r\n    }\r\n    // 시즌(TV Only) & 버튼 활성화\r\n    else if (seasons && seasons.length > 0) {\r\n      selectedButton = \"Seasons\";\r\n    }\r\n    this.setState({\r\n      selectedButton,\r\n      loading: false,\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.getRecommendsMovies();\r\n    this.buttonCheckAndUpdate();\r\n  }\r\n\r\n  handleClick = (selectedButton) => {\r\n    this.setState({\r\n      selectedButton,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { selectedButton, loading } = this.state;\r\n    // 최적화를 위해서 한 번 시도\r\n    // 로딩이 false 이면 굳이 밑에 것들을 가져와서 체크 할 필요가 없지 않을까?\r\n    // 그럴 필요는 없다는 결론 그래서 loading === false로 걸러주기로함\r\n\r\n    if (loading === false) {\r\n      const {\r\n        result: {\r\n          videos: { results },\r\n        },\r\n        casts_result,\r\n        recommends_result,\r\n        result: { id: movie_id },\r\n        isMovie,\r\n      } = this.props;\r\n      // 밑에서 isSeasons를 체크하기 위해서 미리 초기화\r\n      let seasons = null;\r\n      if (!isMovie) {\r\n        ({\r\n          result: { seasons: seasons },\r\n        } = this.props);\r\n      }\r\n\r\n      const isVideos = results && results.length > 0;\r\n      const isCasts = casts_result && casts_result.length > 0;\r\n      // const isCompanies = production_companies && production_companies.length > 0;\r\n      const isRecommends = recommends_result && recommends_result.length > 0;\r\n      const isSeasons = seasons && seasons.length > 0;\r\n\r\n      /* If selectedButton is null, wait til next rendering  */\r\n      return loading ? (\r\n        <Loading />\r\n      ) : selectedButton ? (\r\n        <Container>\r\n          <DetailTabHeader\r\n            isVideos={isVideos}\r\n            isCasts={isCasts}\r\n            isRecommends={isRecommends}\r\n            isSeasons={isSeasons}\r\n            handleClick={this.handleClick}\r\n            selectedButton={selectedButton}\r\n          />\r\n          {selectedButton === \"Youtube\" && isVideos && results.length > 0 && (\r\n            <TabYoutube youtubeKey={results[0].key} />\r\n          )}\r\n          {selectedButton === \"Casts\" && casts_result.length > 0 && (\r\n            <TabCasts casts_result={casts_result} />\r\n          )}\r\n          {selectedButton === \"Recommends\" && recommends_result.length > 0 && (\r\n            <TabSimilar\r\n              recommends_result={recommends_result}\r\n              movie_id={movie_id}\r\n            />\r\n          )}\r\n          {selectedButton === \"Seasons\" && seasons.length > 0 && (\r\n            <TabSeason seasons={seasons} />\r\n          )}\r\n        </Container>\r\n      ) : null;\r\n    }\r\n    // == if(loading === true) 일 때는 굳이 아무것도 렌더링 시키지 않는다\r\n    // 굳이 필요가 없기 때문 (최적화용)\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}